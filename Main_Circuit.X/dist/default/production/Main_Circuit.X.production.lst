

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Fri Jun 23 12:49:44 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F1938
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 1.42
    15                           ; Generated 13/04/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F1938 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0015                     	;# 
    68  0016                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001C                     	;# 
    76  001E                     	;# 
    77  001F                     	;# 
    78  008C                     	;# 
    79  008D                     	;# 
    80  008E                     	;# 
    81  0090                     	;# 
    82  0091                     	;# 
    83  0092                     	;# 
    84  0093                     	;# 
    85  0095                     	;# 
    86  0096                     	;# 
    87  0097                     	;# 
    88  0098                     	;# 
    89  0099                     	;# 
    90  009A                     	;# 
    91  009B                     	;# 
    92  009B                     	;# 
    93  009C                     	;# 
    94  009D                     	;# 
    95  009E                     	;# 
    96  010C                     	;# 
    97  010D                     	;# 
    98  010E                     	;# 
    99  0110                     	;# 
   100  0111                     	;# 
   101  0112                     	;# 
   102  0113                     	;# 
   103  0114                     	;# 
   104  0115                     	;# 
   105  0116                     	;# 
   106  0117                     	;# 
   107  0118                     	;# 
   108  0119                     	;# 
   109  011A                     	;# 
   110  011B                     	;# 
   111  011D                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  0191                     	;# 
   115  0191                     	;# 
   116  0192                     	;# 
   117  0193                     	;# 
   118  0193                     	;# 
   119  0193                     	;# 
   120  0194                     	;# 
   121  0195                     	;# 
   122  0196                     	;# 
   123  0199                     	;# 
   124  019A                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019B                     	;# 
   129  019C                     	;# 
   130  019C                     	;# 
   131  019D                     	;# 
   132  019E                     	;# 
   133  019F                     	;# 
   134  020D                     	;# 
   135  0210                     	;# 
   136  0211                     	;# 
   137  0212                     	;# 
   138  0213                     	;# 
   139  0214                     	;# 
   140  0215                     	;# 
   141  0215                     	;# 
   142  0216                     	;# 
   143  0217                     	;# 
   144  0291                     	;# 
   145  0291                     	;# 
   146  0292                     	;# 
   147  0293                     	;# 
   148  0294                     	;# 
   149  0295                     	;# 
   150  0295                     	;# 
   151  0296                     	;# 
   152  0298                     	;# 
   153  0298                     	;# 
   154  0299                     	;# 
   155  029A                     	;# 
   156  029B                     	;# 
   157  029C                     	;# 
   158  029C                     	;# 
   159  029D                     	;# 
   160  029E                     	;# 
   161  029F                     	;# 
   162  0311                     	;# 
   163  0311                     	;# 
   164  0312                     	;# 
   165  0313                     	;# 
   166  0314                     	;# 
   167  0315                     	;# 
   168  0315                     	;# 
   169  0316                     	;# 
   170  0318                     	;# 
   171  0318                     	;# 
   172  0319                     	;# 
   173  031A                     	;# 
   174  031C                     	;# 
   175  031C                     	;# 
   176  031D                     	;# 
   177  031E                     	;# 
   178  0394                     	;# 
   179  0395                     	;# 
   180  0396                     	;# 
   181  0415                     	;# 
   182  0416                     	;# 
   183  0417                     	;# 
   184  041C                     	;# 
   185  041D                     	;# 
   186  041E                     	;# 
   187  0791                     	;# 
   188  0792                     	;# 
   189  0793                     	;# 
   190  0794                     	;# 
   191  0795                     	;# 
   192  0798                     	;# 
   193  0799                     	;# 
   194  07A0                     	;# 
   195  07A1                     	;# 
   196  07A3                     	;# 
   197  07A4                     	;# 
   198  07A6                     	;# 
   199  07A7                     	;# 
   200  07A9                     	;# 
   201  07AA                     	;# 
   202  0FE4                     	;# 
   203  0FE5                     	;# 
   204  0FE6                     	;# 
   205  0FE7                     	;# 
   206  0FE8                     	;# 
   207  0FE9                     	;# 
   208  0FEA                     	;# 
   209  0FEB                     	;# 
   210  0FED                     	;# 
   211  0FEE                     	;# 
   212  0FEF                     	;# 
   213  000E                     _PORTC	set	14
   214  000D                     _PORTB	set	13
   215  000C                     _PORTA	set	12
   216  0070                     _RC0	set	112
   217  0071                     _RC1	set	113
   218  0073                     _RC3	set	115
   219  0072                     _RC2	set	114
   220  005F                     _GIE	set	95
   221  005E                     _PEIE	set	94
   222  008D                     _RCIF	set	141
   223  0090                     _TRISEbits	set	144
   224  008E                     _TRISC	set	142
   225  008D                     _TRISB	set	141
   226  008C                     _TRISA	set	140
   227  0099                     _OSCCON	set	153
   228  048D                     _RCIE	set	1165
   229  010D                     _LATBbits	set	269
   230  010C                     _LATAbits	set	268
   231  018D                     _ANSELB	set	397
   232  018C                     _ANSELA	set	396
   233  019B                     _SPBRG	set	411
   234  0199                     _RCREG	set	409
   235  019D                     _RCSTA	set	413
   236  0CF2                     _BRGH	set	3314
   237  0CFB                     _BRG16	set	3323
   238  0CF4                     _SYNC	set	3316
   239  0CE9                     _OERR	set	3305
   240                           
   241                           ; #config settings
   242  0000                     
   243                           	psect	cinit
   244  0024                     start_initialization:	
   245  0024                     __initialization:	
   246                           
   247                           ; Clear objects allocated to COMMON
   248  0024  01F0               	clrf	__pbssCOMMON& (0+127)
   249  0025  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   250  0026  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   251  0027  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   252  0028  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   253  0029  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   254  002A  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   255  002B  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   256  002C  01F8               	clrf	(__pbssCOMMON+8)& (0+127)
   257                           
   258                           ; Clear objects allocated to BANK0
   259  002D  01A0               	clrf	__pbssBANK0& (0+127)
   260  002E  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   261  002F                     end_of_initialization:	
   262                           ;End of C runtime variable initialization code
   263                           
   264  002F                     __end_of__initialization:	
   265  002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   266  0030  0020               	movlb	0
   267  0031  3180  2833         	ljmp	_main	;jump to C main() function
   268                           
   269                           	psect	bssCOMMON
   270  0070                     __pbssCOMMON:	
   271  0070                     _rx_hor:	
   272  0070                     	ds	2
   273  0072                     _rx_ign:	
   274  0072                     	ds	2
   275  0074                     _rx_cel:	
   276  0074                     	ds	2
   277  0076                     _rx_data:	
   278  0076                     	ds	2
   279  0078                     _rx_flag:	
   280  0078                     	ds	1
   281                           
   282                           	psect	bssBANK0
   283  0020                     __pbssBANK0:	
   284  0020                     _rx_ser:	
   285  0020                     	ds	2
   286                           
   287                           	psect	cstackCOMMON
   288  0079                     __pcstackCOMMON:	
   289  0079                     ?_initializePort:	
   290  0079                     ?_Interreceive:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0079                     ??_Interreceive:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0079                     ?_main:	
   297                           ; 1 bytes @ 0x0
   298                           
   299                           
   300                           ; 1 bytes @ 0x0
   301  0079                     	ds	3
   302                           
   303                           	psect	cstackBANK0
   304  0022                     __pcstackBANK0:	
   305  0022                     ??_initializePort:	
   306  0022                     ??_main:	
   307                           ; 1 bytes @ 0x0
   308                           
   309                           
   310                           ; 1 bytes @ 0x0
   311  0022                     	ds	2
   312                           
   313                           	psect	maintext
   314  0033                     __pmaintext:	
   315 ;;
   316 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   317 ;;
   318 ;; *************** function _main *****************
   319 ;; Defined at:
   320 ;;		line 78 in file "Main_Circuit_Program.c"
   321 ;; Parameters:    Size  Location     Type
   322 ;;		None
   323 ;; Auto vars:     Size  Location     Type
   324 ;;		None
   325 ;; Return value:  Size  Location     Type
   326 ;;                  1    wreg      void 
   327 ;; Registers used:
   328 ;;		wreg, status,2, status,0, pclath, cstack
   329 ;; Tracked objects:
   330 ;;		On entry : B1F/0
   331 ;;		On exit  : 0/0
   332 ;;		Unchanged: 0/0
   333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   336 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   337 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   338 ;;Total ram usage:        2 bytes
   339 ;; Hardware stack levels required when called:    2
   340 ;; This function calls:
   341 ;;		_initializePort
   342 ;; This function is called by:
   343 ;;		Startup code after reset
   344 ;; This function uses a non-reentrant model
   345 ;;
   346                           
   347                           
   348                           ;psect for function _main
   349  0033                     _main:	
   350                           
   351                           ;Main_Circuit_Program.c: 80: OSCCON = 0b01110010;
   352                           
   353                           ;incstack = 0
   354                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   355  0033  3072               	movlw	114
   356  0034  0021               	movlb	1	; select bank1
   357  0035  0099               	movwf	25	;volatile
   358                           
   359                           ;Main_Circuit_Program.c: 84: initializePort();
   360  0036  3180  20C4  3180   	fcall	_initializePort
   361                           
   362                           ;Main_Circuit_Program.c: 87: RCSTA=0x90;
   363  0039  3090               	movlw	144
   364  003A  0023               	movlb	3	; select bank3
   365  003B  009D               	movwf	29	;volatile
   366                           
   367                           ;Main_Circuit_Program.c: 90: SYNC=0;
   368  003C  121E               	bcf	30,4	;volatile
   369                           
   370                           ;Main_Circuit_Program.c: 91: BRG16=0;
   371  003D  119F               	bcf	31,3	;volatile
   372                           
   373                           ;Main_Circuit_Program.c: 92: BRGH=1;
   374  003E  151E               	bsf	30,2	;volatile
   375                           
   376                           ;Main_Circuit_Program.c: 93: SPBRG=51;
   377  003F  3033               	movlw	51
   378  0040  009B               	movwf	27	;volatile
   379                           
   380                           ;Main_Circuit_Program.c: 96: RCIF=0;
   381  0041  0020               	movlb	0	; select bank0
   382  0042  1291               	bcf	17,5	;volatile
   383                           
   384                           ;Main_Circuit_Program.c: 97: RCIE=1;
   385  0043  0021               	movlb	1	; select bank1
   386  0044  1691               	bsf	17,5	;volatile
   387                           
   388                           ;Main_Circuit_Program.c: 98: PEIE=1;
   389  0045  170B               	bsf	11,6	;volatile
   390                           
   391                           ;Main_Circuit_Program.c: 99: GIE=1;
   392  0046  178B               	bsf	11,7	;volatile
   393                           
   394                           ;Main_Circuit_Program.c: 102: _delay((unsigned long)((10)*(8000000/4000.0)));
   395  0047  301A               	movlw	26
   396  0048  0020               	movlb	0	; select bank0
   397  0049  00A2               	movwf	??_main
   398  004A  30F8               	movlw	248
   399  004B                     u337:	
   400  004B  0B89               	decfsz	9,f
   401  004C  284B               	goto	u337
   402  004D  0BA2               	decfsz	??_main,f
   403  004E  284B               	goto	u337
   404  004F  0000               	nop
   405  0050                     l732:	
   406                           ;Main_Circuit_Program.c: 104: while(1){
   407                           
   408                           
   409                           ;Main_Circuit_Program.c: 106: if(rx_flag==1){
   410  0050  0378               	decf	_rx_flag,w
   411  0051  1D03               	btfss	3,2
   412  0052  28BA               	goto	l762
   413                           
   414                           ;Main_Circuit_Program.c: 109: rx_cel = rx_data & 0x01;
   415  0053  3001               	movlw	1
   416  0054  0576               	andwf	_rx_data,w
   417  0055  00F4               	movwf	_rx_cel
   418  0056  3000               	movlw	0
   419  0057  0577               	andwf	_rx_data+1,w
   420  0058  00F5               	movwf	_rx_cel+1
   421                           
   422                           ;Main_Circuit_Program.c: 110: rx_ign = (rx_data & 0x02) >> 1;
   423  0059  0877               	movf	_rx_data+1,w
   424  005A  0020               	movlb	0	; select bank0
   425  005B  00A3               	movwf	??_main+1
   426  005C  0876               	movf	_rx_data,w
   427  005D  00A2               	movwf	??_main
   428  005E  0D23               	rlf	??_main+1,w
   429  005F  0CA3               	rrf	??_main+1,f
   430  0060  0CA2               	rrf	??_main,f
   431  0061  3001               	movlw	1
   432  0062  0522               	andwf	??_main,w
   433  0063  00F2               	movwf	_rx_ign
   434  0064  3000               	movlw	0
   435  0065  0523               	andwf	??_main+1,w
   436  0066  00F3               	movwf	_rx_ign+1
   437                           
   438                           ;Main_Circuit_Program.c: 111: rx_hor = (rx_data & 0x04) >> 2;
   439  0067  0877               	movf	_rx_data+1,w
   440  0068  00A3               	movwf	??_main+1
   441  0069  0876               	movf	_rx_data,w
   442  006A  00A2               	movwf	??_main
   443  006B  0D23               	rlf	??_main+1,w
   444  006C  0CA3               	rrf	??_main+1,f
   445  006D  0CA2               	rrf	??_main,f
   446  006E  0D23               	rlf	??_main+1,w
   447  006F  0CA3               	rrf	??_main+1,f
   448  0070  0CA2               	rrf	??_main,f
   449  0071  3001               	movlw	1
   450  0072  0522               	andwf	??_main,w
   451  0073  00F0               	movwf	_rx_hor
   452  0074  3000               	movlw	0
   453  0075  0523               	andwf	??_main+1,w
   454  0076  00F1               	movwf	_rx_hor+1
   455                           
   456                           ;Main_Circuit_Program.c: 112: rx_ser = (rx_data & 0x08) >> 3;
   457  0077  0877               	movf	_rx_data+1,w
   458  0078  00A3               	movwf	??_main+1
   459  0079  0876               	movf	_rx_data,w
   460  007A  00A2               	movwf	??_main
   461  007B  0D23               	rlf	??_main+1,w
   462  007C  0CA3               	rrf	??_main+1,f
   463  007D  0CA2               	rrf	??_main,f
   464  007E  0D23               	rlf	??_main+1,w
   465  007F  0CA3               	rrf	??_main+1,f
   466  0080  0CA2               	rrf	??_main,f
   467  0081  0D23               	rlf	??_main+1,w
   468  0082  0CA3               	rrf	??_main+1,f
   469  0083  0CA2               	rrf	??_main,f
   470  0084  3001               	movlw	1
   471  0085  0522               	andwf	??_main,w
   472  0086  00A0               	movwf	_rx_ser
   473  0087  3000               	movlw	0
   474  0088  0523               	andwf	??_main+1,w
   475  0089  00A1               	movwf	_rx_ser+1
   476                           
   477                           ;Main_Circuit_Program.c: 116: if(rx_hor == 1 && RC2 == 1){
   478  008A  0370               	decf	_rx_hor,w
   479  008B  0471               	iorwf	_rx_hor+1,w
   480  008C  1903               	btfsc	3,2
   481  008D  1D0E               	btfss	14,2	;volatile
   482  008E  2892               	goto	l85
   483                           
   484                           ;Main_Circuit_Program.c: 117: LATAbits.LATA1 = 1;
   485  008F  0022               	movlb	2	; select bank2
   486  0090  148C               	bsf	12,1	;volatile
   487                           
   488                           ;Main_Circuit_Program.c: 118: }
   489  0091  2894               	goto	l742
   490  0092                     l85:	
   491                           
   492                           ;Main_Circuit_Program.c: 119: else{
   493                           ;Main_Circuit_Program.c: 120: LATAbits.LATA1 = 0;
   494  0092  0022               	movlb	2	; select bank2
   495  0093  108C               	bcf	12,1	;volatile
   496  0094                     l742:	
   497                           
   498                           ;Main_Circuit_Program.c: 121: }
   499                           ;Main_Circuit_Program.c: 123: if(rx_ser == 1 && RC3 == 1){
   500  0094  0020               	movlb	0	; select bank0
   501  0095  0320               	decf	_rx_ser,w
   502  0096  0421               	iorwf	_rx_ser+1,w
   503  0097  1903               	btfsc	3,2
   504  0098  1D8E               	btfss	14,3	;volatile
   505  0099  289D               	goto	l87
   506                           
   507                           ;Main_Circuit_Program.c: 124: LATAbits.LATA4 = 1;
   508  009A  0022               	movlb	2	; select bank2
   509  009B  160C               	bsf	12,4	;volatile
   510                           
   511                           ;Main_Circuit_Program.c: 125: }
   512  009C  289F               	goto	l748
   513  009D                     l87:	
   514                           
   515                           ;Main_Circuit_Program.c: 126: else{
   516                           ;Main_Circuit_Program.c: 127: LATAbits.LATA4 = 0;
   517  009D  0022               	movlb	2	; select bank2
   518  009E  120C               	bcf	12,4	;volatile
   519  009F                     l748:	
   520                           
   521                           ;Main_Circuit_Program.c: 128: }
   522                           ;Main_Circuit_Program.c: 130: if(rx_ign == 1 && RC1 == 1){
   523  009F  0372               	decf	_rx_ign,w
   524  00A0  0473               	iorwf	_rx_ign+1,w
   525  00A1  1D03               	btfss	3,2
   526  00A2  28A9               	goto	l89
   527  00A3  0020               	movlb	0	; select bank0
   528  00A4  1C8E               	btfss	14,1	;volatile
   529  00A5  28A9               	goto	l89
   530                           
   531                           ;Main_Circuit_Program.c: 131: LATBbits.LATB0 = 1;
   532  00A6  0022               	movlb	2	; select bank2
   533  00A7  140D               	bsf	13,0	;volatile
   534                           
   535                           ;Main_Circuit_Program.c: 132: }
   536  00A8  28AB               	goto	l754
   537  00A9                     l89:	
   538                           
   539                           ;Main_Circuit_Program.c: 133: else{
   540                           ;Main_Circuit_Program.c: 134: LATBbits.LATB0 = 0;
   541  00A9  0022               	movlb	2	; select bank2
   542  00AA  100D               	bcf	13,0	;volatile
   543  00AB                     l754:	
   544                           
   545                           ;Main_Circuit_Program.c: 135: }
   546                           ;Main_Circuit_Program.c: 137: if(rx_cel == 1 && RC0 == 1){
   547  00AB  0374               	decf	_rx_cel,w
   548  00AC  0475               	iorwf	_rx_cel+1,w
   549  00AD  1D03               	btfss	3,2
   550  00AE  28B5               	goto	l91
   551  00AF  0020               	movlb	0	; select bank0
   552  00B0  1C0E               	btfss	14,0	;volatile
   553  00B1  28B5               	goto	l91
   554                           
   555                           ;Main_Circuit_Program.c: 138: LATBbits.LATB1 = 1;
   556  00B2  0022               	movlb	2	; select bank2
   557  00B3  148D               	bsf	13,1	;volatile
   558                           
   559                           ;Main_Circuit_Program.c: 139: }
   560  00B4  28B7               	goto	l760
   561  00B5                     l91:	
   562                           
   563                           ;Main_Circuit_Program.c: 140: else{
   564                           ;Main_Circuit_Program.c: 141: LATBbits.LATB1 = 0;
   565  00B5  0022               	movlb	2	; select bank2
   566  00B6  108D               	bcf	13,1	;volatile
   567  00B7                     l760:	
   568                           
   569                           ;Main_Circuit_Program.c: 142: }
   570                           ;Main_Circuit_Program.c: 144: rx_data = 0x00;
   571  00B7  01F6               	clrf	_rx_data
   572  00B8  01F7               	clrf	_rx_data+1
   573                           
   574                           ;Main_Circuit_Program.c: 145: rx_flag=0;
   575  00B9  01F8               	clrf	_rx_flag
   576  00BA                     l762:	
   577                           
   578                           ;Main_Circuit_Program.c: 146: }
   579                           ;Main_Circuit_Program.c: 149: if(rx_ign == 0){
   580  00BA  0872               	movf	_rx_ign,w
   581  00BB  0473               	iorwf	_rx_ign+1,w
   582  00BC  1D03               	btfss	3,2
   583  00BD  28C1               	goto	l93
   584                           
   585                           ;Main_Circuit_Program.c: 150: LATAbits.LATA0 = 1;
   586  00BE  0022               	movlb	2	; select bank2
   587  00BF  140C               	bsf	12,0	;volatile
   588                           
   589                           ;Main_Circuit_Program.c: 151: }
   590  00C0  2850               	goto	l732
   591  00C1                     l93:	
   592                           
   593                           ;Main_Circuit_Program.c: 152: else{
   594                           ;Main_Circuit_Program.c: 153: LATAbits.LATA0 = 0;
   595  00C1  0022               	movlb	2	; select bank2
   596  00C2  100C               	bcf	12,0	;volatile
   597  00C3  2850               	goto	l732
   598  00C4                     __end_of_main:	
   599                           
   600                           	psect	text1
   601  00C4                     __ptext1:	
   602 ;; *************** function _initializePort *****************
   603 ;; Defined at:
   604 ;;		line 159 in file "Main_Circuit_Program.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;		None
   607 ;; Auto vars:     Size  Location     Type
   608 ;;		None
   609 ;; Return value:  Size  Location     Type
   610 ;;                  1    wreg      void 
   611 ;; Registers used:
   612 ;;		wreg, status,2
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   622 ;;Total ram usage:        0 bytes
   623 ;; Hardware stack levels used:    1
   624 ;; Hardware stack levels required when called:    1
   625 ;; This function calls:
   626 ;;		Nothing
   627 ;; This function is called by:
   628 ;;		_main
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           
   633                           ;psect for function _initializePort
   634  00C4                     _initializePort:	
   635                           
   636                           ;Main_Circuit_Program.c: 161: PORTA = 0x00;
   637                           
   638                           ;incstack = 0
   639                           ; Regs used in _initializePort: [wreg+status,2]
   640  00C4  0020               	movlb	0	; select bank0
   641  00C5  018C               	clrf	12	;volatile
   642                           
   643                           ;Main_Circuit_Program.c: 162: PORTB = 0x00;
   644  00C6  018D               	clrf	13	;volatile
   645                           
   646                           ;Main_Circuit_Program.c: 163: PORTC = 0x00;
   647  00C7  018E               	clrf	14	;volatile
   648                           
   649                           ;Main_Circuit_Program.c: 167: ANSELA = 0x00;
   650  00C8  0023               	movlb	3	; select bank3
   651  00C9  018C               	clrf	12	;volatile
   652                           
   653                           ;Main_Circuit_Program.c: 168: ANSELB = 0x00;
   654  00CA  018D               	clrf	13	;volatile
   655                           
   656                           ;Main_Circuit_Program.c: 175: TRISA = 0x00;
   657  00CB  0021               	movlb	1	; select bank1
   658  00CC  018C               	clrf	12	;volatile
   659                           
   660                           ;Main_Circuit_Program.c: 185: TRISB = 0x00;
   661  00CD  018D               	clrf	13	;volatile
   662                           
   663                           ;Main_Circuit_Program.c: 195: TRISC = 0xAF;
   664  00CE  30AF               	movlw	175
   665  00CF  008E               	movwf	14	;volatile
   666                           
   667                           ;Main_Circuit_Program.c: 205: TRISEbits.TRISE3 = 1;
   668  00D0  1590               	bsf	16,3	;volatile
   669  00D1  0008               	return
   670  00D2                     __end_of_initializePort:	
   671                           
   672                           	psect	intentry
   673  0004                     __pintentry:	
   674 ;; *************** function _Interreceive *****************
   675 ;; Defined at:
   676 ;;		line 59 in file "Main_Circuit_Program.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;		None
   679 ;; Auto vars:     Size  Location     Type
   680 ;;		None
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      void 
   683 ;; Registers used:
   684 ;;		wreg, status,2
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   692 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   693 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   694 ;;Total ram usage:        3 bytes
   695 ;; Hardware stack levels used:    1
   696 ;; This function calls:
   697 ;;		Nothing
   698 ;; This function is called by:
   699 ;;		Interrupt level 1
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703  0004                     _Interreceive:	
   704                           
   705                           ;incstack = 0
   706  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   707                           
   708                           ; Regs used in _Interreceive: [wreg+status,2]
   709  0005  3180               	pagesel	$
   710  0006  0020               	movlb	0	; select bank0
   711  0007  087F               	movf	127,w
   712  0008  00FB               	movwf	??_Interreceive+2
   713                           
   714                           ;Main_Circuit_Program.c: 61: if(RCIF==1){
   715  0009  1E91               	btfss	17,5	;volatile
   716  000A  281D               	goto	i1l78
   717                           
   718                           ;Main_Circuit_Program.c: 63: if(OERR==1){
   719  000B  0023               	movlb	3	; select bank3
   720  000C  1C9D               	btfss	29,1	;volatile
   721  000D  2812               	goto	i1l574
   722                           
   723                           ;Main_Circuit_Program.c: 64: RCSTA=0;
   724  000E  019D               	clrf	29	;volatile
   725                           
   726                           ;Main_Circuit_Program.c: 65: RCSTA=0x90;
   727  000F  3090               	movlw	144
   728  0010  009D               	movwf	29	;volatile
   729                           
   730                           ;Main_Circuit_Program.c: 66: }
   731  0011  281D               	goto	i1l78
   732  0012                     i1l574:	
   733                           
   734                           ;Main_Circuit_Program.c: 67: else{
   735                           ;Main_Circuit_Program.c: 68: rx_data=RCREG;
   736  0012  0819               	movf	25,w	;volatile
   737  0013  00F9               	movwf	??_Interreceive
   738  0014  01FA               	clrf	??_Interreceive+1
   739  0015  0879               	movf	??_Interreceive,w
   740  0016  00F6               	movwf	_rx_data
   741  0017  087A               	movf	??_Interreceive+1,w
   742  0018  00F7               	movwf	_rx_data+1
   743                           
   744                           ;Main_Circuit_Program.c: 69: rx_flag=1;
   745  0019  01F8               	clrf	_rx_flag
   746  001A  0AF8               	incf	_rx_flag,f
   747                           
   748                           ;Main_Circuit_Program.c: 70: RCIF=0;
   749  001B  0020               	movlb	0	; select bank0
   750  001C  1291               	bcf	17,5	;volatile
   751  001D                     i1l78:	
   752  001D  087B               	movf	??_Interreceive+2,w
   753  001E  0020               	movlb	0	; select bank0
   754  001F  00FF               	movwf	127
   755  0020  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   756  0021  0009               	retfie
   757  0022                     __end_of_Interreceive:	
   758  007E                     btemp	set	126	;btemp
   759  007E                     int$flags	set	126
   760  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3      12
    BANK0            80      2       4
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _Interreceive in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interreceive in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interreceive in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interreceive in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interreceive in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interreceive in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interreceive in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interreceive in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interreceive in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interreceive in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interreceive in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interreceive in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interreceive in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interreceive in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 BANK0      2     2      0
                     _initializePort
 ---------------------------------------------------------------------------------
 (1) _initializePort                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Interreceive                                         3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initializePort

 _Interreceive (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      3       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       4       5        5.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      10      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      10      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Fri Jun 23 12:49:44 2017

            __CFG_CP$OFF 0000                       l91 00B5                       l93 00C1  
                     l85 0092                       l87 009D                       l89 00A9  
                    l732 0050                      l742 0094                      l760 00B7  
                    l754 00AB                      l762 00BA                      l748 009F  
                    _GIE 005F                      _RC0 0070                      _RC1 0071  
                    _RC2 0072                      _RC3 0073                      u337 004B  
           __CFG_CPD$OFF 0000             __CFG_BORV$HI 0000                      wreg 0009  
           __CFG_LVP$OFF 0000                     _BRGH 0CF2                     _PEIE 005E  
                   _RCIE 048D                     _RCIF 008D                     i1l78 001D  
                   _OERR 0CE9                     _SYNC 0CF4         ??_initializePort 0022  
           __CFG_WRT$OFF 0000                     _main 0033                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0022            __CFG_IESO$OFF 0000  
                  ?_main 0079                    _BRG16 0CFB            __CFG_WDTE$OFF 0000  
                  i1l574 0012                    _RCREG 0199                    _RCSTA 019D  
                  _SPBRG 019B                    _PORTA 000C                    _PORTB 000D  
                  _PORTC 000E                    _TRISA 008C                    _TRISB 008D  
                  _TRISC 008E            __CFG_PWRTE$ON 0000           __CFG_FCMEN$OFF 0000  
                  status 0003                    wtemp0 007E           __CFG_MCLRE$OFF 0000  
        __initialization 0024             __end_of_main 00C4                   ??_main 0022  
         __CFG_PLLEN$OFF 0000            ?_Interreceive 0079                   _ANSELA 018C  
                 _ANSELB 018D                   _OSCCON 0099           __CFG_STVREN$ON 0000  
                 _rx_cel 0074                   _rx_ign 0072                   _rx_hor 0070  
                 _rx_ser 0020           ??_Interreceive 0079  __end_of__initialization 002F  
         __pcstackCOMMON 0079               __pbssBANK0 0020          __CFG_VCAPEN$OFF 0000  
             __pmaintext 0033               __pintentry 0004     __end_of_Interreceive 0022  
                __ptext1 00C4                  _rx_data 0076                  _rx_flag 0078  
   end_of_initialization 002F  __size_of_initializePort 000E         __CFG_FOSC$INTOSC 0000  
              _TRISEbits 0090      start_initialization 0024    __size_of_Interreceive 001E  
            __pbssCOMMON 0070                ___latbits 0003            __pcstackBANK0 0022  
           _Interreceive 0004           _initializePort 00C4                 _LATAbits 010C  
               _LATBbits 010D   __end_of_initializePort 00D2          ?_initializePort 0079  
          __size_of_main 0091                 int$flags 007E                 intlevel1 0000  
      __CFG_CLKOUTEN$OFF 0000  
