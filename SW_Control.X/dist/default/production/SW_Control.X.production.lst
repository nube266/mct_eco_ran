

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Thu Jun 22 23:05:05 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F1823
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 1.42
    13                           ; Generated 13/04/2017 GMT
    14                           ; 
    15                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F1823 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000E                     	;# 
    60  0011                     	;# 
    61  0012                     	;# 
    62  0015                     	;# 
    63  0016                     	;# 
    64  0016                     	;# 
    65  0017                     	;# 
    66  0018                     	;# 
    67  0019                     	;# 
    68  001A                     	;# 
    69  001B                     	;# 
    70  001C                     	;# 
    71  001E                     	;# 
    72  001F                     	;# 
    73  008C                     	;# 
    74  008E                     	;# 
    75  0091                     	;# 
    76  0092                     	;# 
    77  0095                     	;# 
    78  0096                     	;# 
    79  0097                     	;# 
    80  0098                     	;# 
    81  0099                     	;# 
    82  009A                     	;# 
    83  009B                     	;# 
    84  009B                     	;# 
    85  009C                     	;# 
    86  009D                     	;# 
    87  009E                     	;# 
    88  010C                     	;# 
    89  010E                     	;# 
    90  0111                     	;# 
    91  0112                     	;# 
    92  0113                     	;# 
    93  0114                     	;# 
    94  0115                     	;# 
    95  0116                     	;# 
    96  0117                     	;# 
    97  0118                     	;# 
    98  0119                     	;# 
    99  011A                     	;# 
   100  011B                     	;# 
   101  011D                     	;# 
   102  011D                     	;# 
   103  018C                     	;# 
   104  018E                     	;# 
   105  0191                     	;# 
   106  0191                     	;# 
   107  0192                     	;# 
   108  0193                     	;# 
   109  0193                     	;# 
   110  0193                     	;# 
   111  0194                     	;# 
   112  0195                     	;# 
   113  0196                     	;# 
   114  0199                     	;# 
   115  019A                     	;# 
   116  019B                     	;# 
   117  019B                     	;# 
   118  019B                     	;# 
   119  019B                     	;# 
   120  019C                     	;# 
   121  019C                     	;# 
   122  019D                     	;# 
   123  019E                     	;# 
   124  019F                     	;# 
   125  020C                     	;# 
   126  020E                     	;# 
   127  0211                     	;# 
   128  0211                     	;# 
   129  0212                     	;# 
   130  0212                     	;# 
   131  0213                     	;# 
   132  0213                     	;# 
   133  0214                     	;# 
   134  0214                     	;# 
   135  0215                     	;# 
   136  0215                     	;# 
   137  0215                     	;# 
   138  0216                     	;# 
   139  0216                     	;# 
   140  0217                     	;# 
   141  0217                     	;# 
   142  0291                     	;# 
   143  0291                     	;# 
   144  0292                     	;# 
   145  0293                     	;# 
   146  0294                     	;# 
   147  0295                     	;# 
   148  0295                     	;# 
   149  0296                     	;# 
   150  0391                     	;# 
   151  0392                     	;# 
   152  0393                     	;# 
   153  039A                     	;# 
   154  039C                     	;# 
   155  039D                     	;# 
   156  039E                     	;# 
   157  039F                     	;# 
   158  0FE4                     	;# 
   159  0FE5                     	;# 
   160  0FE6                     	;# 
   161  0FE7                     	;# 
   162  0FE8                     	;# 
   163  0FE9                     	;# 
   164  0FEA                     	;# 
   165  0FEB                     	;# 
   166  0FED                     	;# 
   167  0FEE                     	;# 
   168  0FEF                     	;# 
   169  000E                     _PORTC	set	14
   170  000C                     _PORTA	set	12
   171  0065                     _RA5	set	101
   172  0064                     _RA4	set	100
   173  0063                     _RA3	set	99
   174  0062                     _RA2	set	98
   175  0074                     _RC4	set	116
   176  0073                     _RC3	set	115
   177  0072                     _RC2	set	114
   178  0071                     _RC1	set	113
   179  0070                     _RC0	set	112
   180  008C                     _TXIF	set	140
   181  008E                     _TRISC	set	142
   182  008C                     _TRISA	set	140
   183  0099                     _OSCCON	set	153
   184  08EA                     _TXCKSEL	set	2282
   185  019A                     _TXREG	set	410
   186  019B                     _SPBRG	set	411
   187  019C                     _SPBRGH	set	412
   188  019F                     _BAUDCONbits	set	415
   189  019D                     _RCSTAbits	set	413
   190  019E                     _TXSTA	set	414
   191  018E                     _ANSELC	set	398
   192  018C                     _ANSELA	set	396
   193                           
   194                           ; #config settings
   195  0000                     
   196                           	psect	cinit
   197  07F8                     start_initialization:	
   198  07F8                     __initialization:	
   199                           
   200                           ; Clear objects allocated to COMMON
   201  07F8  01F0               	clrf	__pbssCOMMON& (0+127)
   202  07F9  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   203  07FA  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   204  07FB  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   205  07FC  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   206  07FD  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   207  07FE                     end_of_initialization:	
   208                           ;End of C runtime variable initialization code
   209                           
   210  07FE                     __end_of__initialization:	
   211  07FE  0020               	movlb	0
   212  07FF  2FB4               	ljmp	_main	;jump to C main() function
   213                           
   214                           	psect	bssCOMMON
   215  0070                     __pbssCOMMON:	
   216  0070                     _i:	
   217  0070                     	ds	2
   218  0072                     _tx_before:	
   219  0072                     	ds	2
   220  0074                     _tx_data:	
   221  0074                     	ds	2
   222                           
   223                           	psect	cstackCOMMON
   224  0076                     __pcstackCOMMON:	
   225  0076                     ?_Bit4_data:	
   226  0076                     ??_Bit4_data:	
   227                           ; 1 bytes @ 0x0
   228                           
   229  0076                     ?_Usart_data:	
   230                           ; 1 bytes @ 0x0
   231                           
   232  0076                     ??_Usart_data:	
   233                           ; 1 bytes @ 0x0
   234                           
   235  0076                     ?_main:	
   236                           ; 1 bytes @ 0x0
   237                           
   238  0076                     ??_main:	
   239                           ; 1 bytes @ 0x0
   240                           
   241                           
   242                           ; 1 bytes @ 0x0
   243  0076                     	ds	1
   244                           
   245                           	psect	maintext
   246  07B4                     __pmaintext:	
   247 ;;
   248 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   249 ;;
   250 ;; *************** function _main *****************
   251 ;; Defined at:
   252 ;;		line 57 in file "SW_Control_Program.c"
   253 ;; Parameters:    Size  Location     Type
   254 ;;		None
   255 ;; Auto vars:     Size  Location     Type
   256 ;;		None
   257 ;; Return value:  Size  Location     Type
   258 ;;                  1    wreg      void 
   259 ;; Registers used:
   260 ;;		wreg, status,2, status,0, pclath, cstack
   261 ;; Tracked objects:
   262 ;;		On entry : B1F/0
   263 ;;		On exit  : 0/0
   264 ;;		Unchanged: 0/0
   265 ;; Data sizes:     COMMON   BANK0   BANK1
   266 ;;      Params:         0       0       0
   267 ;;      Locals:         0       0       0
   268 ;;      Temps:          1       0       0
   269 ;;      Totals:         1       0       0
   270 ;;Total ram usage:        1 bytes
   271 ;; Hardware stack levels required when called:    1
   272 ;; This function calls:
   273 ;;		_Bit4_data
   274 ;;		_Usart_data
   275 ;; This function is called by:
   276 ;;		Startup code after reset
   277 ;; This function uses a non-reentrant model
   278 ;;
   279                           
   280                           
   281                           ;psect for function _main
   282  07B4                     _main:	
   283                           
   284                           ;SW_Control_Program.c: 58: OSCCON = 0b01110000;
   285                           
   286                           ;incstack = 0
   287                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   288  07B4  3070               	movlw	112
   289  07B5  0021               	movlb	1	; select bank1
   290  07B6  0099               	movwf	25	;volatile
   291                           
   292                           ;SW_Control_Program.c: 59: TRISA = 0b00000000;
   293  07B7  018C               	clrf	12	;volatile
   294                           
   295                           ;SW_Control_Program.c: 60: TRISC = 0b00011111;
   296  07B8  301F               	movlw	31
   297  07B9  008E               	movwf	14	;volatile
   298                           
   299                           ;SW_Control_Program.c: 61: ANSELA = 0b00000000;
   300  07BA  0023               	movlb	3	; select bank3
   301  07BB  018C               	clrf	12	;volatile
   302                           
   303                           ;SW_Control_Program.c: 62: ANSELC = 0b00000000;
   304  07BC  018E               	clrf	14	;volatile
   305                           
   306                           ;SW_Control_Program.c: 63: TXCKSEL=1;
   307  07BD  0022               	movlb	2	; select bank2
   308  07BE  151D               	bsf	29,2	;volatile
   309                           
   310                           ;SW_Control_Program.c: 65: PORTA = 0x00;
   311  07BF  0020               	movlb	0	; select bank0
   312  07C0  018C               	clrf	12	;volatile
   313                           
   314                           ;SW_Control_Program.c: 66: PORTC = 0x00;
   315  07C1  018E               	clrf	14	;volatile
   316                           
   317                           ;SW_Control_Program.c: 69: TXSTA = 0b00100100;
   318  07C2  3024               	movlw	36
   319  07C3  0023               	movlb	3	; select bank3
   320  07C4  009E               	movwf	30	;volatile
   321                           
   322                           ;SW_Control_Program.c: 101: RCSTAbits.SPEN = 1;
   323  07C5  179D               	bsf	29,7	;volatile
   324                           
   325                           ;SW_Control_Program.c: 102: BAUDCONbits.BRG16 = 0;
   326  07C6  119F               	bcf	31,3	;volatile
   327                           
   328                           ;SW_Control_Program.c: 103: SPBRGH = 0x00;
   329  07C7  019C               	clrf	28	;volatile
   330                           
   331                           ;SW_Control_Program.c: 104: SPBRG = 51;
   332  07C8  3033               	movlw	51
   333  07C9  009B               	movwf	27	;volatile
   334                           
   335                           ;SW_Control_Program.c: 106: _delay((unsigned long)((10)*(8000000/4000.0)));
   336  07CA  301A               	movlw	26
   337  07CB  00F6               	movwf	??_main
   338  07CC  30F8               	movlw	248
   339  07CD                     u127:	
   340  07CD  0B89               	decfsz	9,f
   341  07CE  2FCD               	goto	u127
   342  07CF  0BF6               	decfsz	??_main,f
   343  07D0  2FCD               	goto	u127
   344  07D1  3200               	nop2
   345  07D2                     l597:	
   346                           ;SW_Control_Program.c: 108: while(1){
   347                           
   348                           
   349                           ;SW_Control_Program.c: 110: Bit4_data();
   350  07D2  2774               	fcall	_Bit4_data
   351                           
   352                           ;SW_Control_Program.c: 112: Usart_data();
   353  07D3  278A               	fcall	_Usart_data
   354                           
   355                           ;SW_Control_Program.c: 115: if(tx_data!=tx_before) _delay((unsigned long)((20)*(8000000/
      +                          4000.0)));
   356  07D4  0873               	movf	_tx_before+1,w
   357  07D5  0675               	xorwf	_tx_data+1,w
   358  07D6  1D03               	skipz
   359  07D7  2FDA               	goto	u105
   360  07D8  0872               	movf	_tx_before,w
   361  07D9  0674               	xorwf	_tx_data,w
   362  07DA                     u105:	
   363  07DA  1903               	skipnz
   364  07DB  2FE3               	goto	l67
   365  07DC  3034               	movlw	52
   366  07DD  00F6               	movwf	??_main
   367  07DE  30F2               	movlw	242
   368  07DF                     u137:	
   369  07DF  0B89               	decfsz	9,f
   370  07E0  2FDF               	goto	u137
   371  07E1  0BF6               	decfsz	??_main,f
   372  07E2  2FDF               	goto	u137
   373  07E3                     l67:	
   374                           ;SW_Control_Program.c: 118: while(!TXIF);
   375                           
   376  07E3  0020               	movlb	0	; select bank0
   377  07E4  1E11               	btfss	17,4	;volatile
   378  07E5  2FE3               	goto	l67
   379                           
   380                           ;SW_Control_Program.c: 119: TXREG=tx_data;
   381  07E6  0874               	movf	_tx_data,w
   382  07E7  0023               	movlb	3	; select bank3
   383  07E8  009A               	movwf	26	;volatile
   384                           
   385                           ;SW_Control_Program.c: 121: tx_before=tx_data;
   386  07E9  0875               	movf	_tx_data+1,w
   387  07EA  00F3               	movwf	_tx_before+1
   388  07EB  0874               	movf	_tx_data,w
   389  07EC  00F2               	movwf	_tx_before
   390                           
   391                           ;SW_Control_Program.c: 122: tx_data=0x00;
   392  07ED  01F4               	clrf	_tx_data
   393  07EE  01F5               	clrf	_tx_data+1
   394                           
   395                           ;SW_Control_Program.c: 124: _delay((unsigned long)((10)*(8000000/4000.0)));
   396  07EF  301A               	movlw	26
   397  07F0  00F6               	movwf	??_main
   398  07F1  30F8               	movlw	248
   399  07F2                     u147:	
   400  07F2  0B89               	decfsz	9,f
   401  07F3  2FF2               	goto	u147
   402  07F4  0BF6               	decfsz	??_main,f
   403  07F5  2FF2               	goto	u147
   404  07F6  3200               	nop2
   405  07F7  2FD2               	goto	l597
   406  07F8                     __end_of_main:	
   407                           
   408                           	psect	text1
   409  078A                     __ptext1:	
   410 ;; *************** function _Usart_data *****************
   411 ;; Defined at:
   412 ;;		line 130 in file "SW_Control_Program.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;		None
   415 ;; Auto vars:     Size  Location     Type
   416 ;;		None
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		wreg
   421 ;; Tracked objects:
   422 ;;		On entry : 0/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMMON   BANK0   BANK1
   426 ;;      Params:         0       0       0
   427 ;;      Locals:         0       0       0
   428 ;;      Temps:          0       0       0
   429 ;;      Totals:         0       0       0
   430 ;;Total ram usage:        0 bytes
   431 ;; Hardware stack levels used:    1
   432 ;; This function calls:
   433 ;;		Nothing
   434 ;; This function is called by:
   435 ;;		_main
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439                           
   440                           ;psect for function _Usart_data
   441  078A                     _Usart_data:	
   442                           
   443                           ;SW_Control_Program.c: 132: if(RC0==1){
   444                           
   445                           ;incstack = 0
   446                           ; Regs used in _Usart_data: [wreg]
   447  078A  0020               	movlb	0	; select bank0
   448  078B  1C0E               	btfss	14,0	;volatile
   449  078C  2F93               	goto	l565
   450                           
   451                           ;SW_Control_Program.c: 133: tx_data=tx_data | 0b00000001;
   452  078D  3001               	movlw	1
   453  078E  0474               	iorwf	_tx_data,w
   454  078F  00F4               	movwf	_tx_data
   455  0790  3000               	movlw	0
   456  0791  0475               	iorwf	_tx_data+1,w
   457  0792  00F5               	movwf	_tx_data+1
   458  0793                     l565:	
   459                           
   460                           ;SW_Control_Program.c: 135: }
   461                           ;SW_Control_Program.c: 137: if(RC1==1){
   462  0793  1C8E               	btfss	14,1	;volatile
   463  0794  2F9B               	goto	l569
   464                           
   465                           ;SW_Control_Program.c: 138: tx_data=tx_data | 0b00000010;
   466  0795  3002               	movlw	2
   467  0796  0474               	iorwf	_tx_data,w
   468  0797  00F4               	movwf	_tx_data
   469  0798  3000               	movlw	0
   470  0799  0475               	iorwf	_tx_data+1,w
   471  079A  00F5               	movwf	_tx_data+1
   472  079B                     l569:	
   473                           
   474                           ;SW_Control_Program.c: 140: }
   475                           ;SW_Control_Program.c: 142: if(RC2==1){
   476  079B  1D0E               	btfss	14,2	;volatile
   477  079C  2FA3               	goto	l573
   478                           
   479                           ;SW_Control_Program.c: 143: tx_data=tx_data | 0b00000100;
   480  079D  3004               	movlw	4
   481  079E  0474               	iorwf	_tx_data,w
   482  079F  00F4               	movwf	_tx_data
   483  07A0  3000               	movlw	0
   484  07A1  0475               	iorwf	_tx_data+1,w
   485  07A2  00F5               	movwf	_tx_data+1
   486  07A3                     l573:	
   487                           
   488                           ;SW_Control_Program.c: 145: }
   489                           ;SW_Control_Program.c: 147: if(RC3==1){
   490  07A3  1D8E               	btfss	14,3	;volatile
   491  07A4  2FAB               	goto	l577
   492                           
   493                           ;SW_Control_Program.c: 148: tx_data=tx_data | 0b00001000;
   494  07A5  3008               	movlw	8
   495  07A6  0474               	iorwf	_tx_data,w
   496  07A7  00F4               	movwf	_tx_data
   497  07A8  3000               	movlw	0
   498  07A9  0475               	iorwf	_tx_data+1,w
   499  07AA  00F5               	movwf	_tx_data+1
   500  07AB                     l577:	
   501                           
   502                           ;SW_Control_Program.c: 150: }
   503                           ;SW_Control_Program.c: 152: if(RC4==1){
   504  07AB  1E0E               	btfss	14,4	;volatile
   505  07AC  0008               	return
   506                           
   507                           ;SW_Control_Program.c: 153: tx_data=tx_data | 0b00010000;
   508  07AD  3010               	movlw	16
   509  07AE  0474               	iorwf	_tx_data,w
   510  07AF  00F4               	movwf	_tx_data
   511  07B0  3000               	movlw	0
   512  07B1  0475               	iorwf	_tx_data+1,w
   513  07B2  00F5               	movwf	_tx_data+1
   514  07B3  0008               	return
   515  07B4                     __end_of_Usart_data:	
   516                           
   517                           	psect	text2
   518  0774                     __ptext2:	
   519 ;; *************** function _Bit4_data *****************
   520 ;; Defined at:
   521 ;;		line 159 in file "SW_Control_Program.c"
   522 ;; Parameters:    Size  Location     Type
   523 ;;		None
   524 ;; Auto vars:     Size  Location     Type
   525 ;;		None
   526 ;; Return value:  Size  Location     Type
   527 ;;                  1    wreg      void 
   528 ;; Registers used:
   529 ;;		None
   530 ;; Tracked objects:
   531 ;;		On entry : 0/0
   532 ;;		On exit  : 0/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMMON   BANK0   BANK1
   535 ;;      Params:         0       0       0
   536 ;;      Locals:         0       0       0
   537 ;;      Temps:          0       0       0
   538 ;;      Totals:         0       0       0
   539 ;;Total ram usage:        0 bytes
   540 ;; Hardware stack levels used:    1
   541 ;; This function calls:
   542 ;;		Nothing
   543 ;; This function is called by:
   544 ;;		_main
   545 ;; This function uses a non-reentrant model
   546 ;;
   547                           
   548                           
   549                           ;psect for function _Bit4_data
   550  0774                     _Bit4_data:	
   551                           
   552                           ;SW_Control_Program.c: 162: if(RC0==1){
   553                           
   554                           ;incstack = 0
   555                           ; Regs used in _Bit4_data: []
   556  0774  0020               	movlb	0	; select bank0
   557  0775  1C0E               	btfss	14,0	;volatile
   558  0776  2F79               	goto	l83
   559                           
   560                           ;SW_Control_Program.c: 163: RA2=1;
   561  0777  150C               	bsf	12,2	;volatile
   562                           
   563                           ;SW_Control_Program.c: 164: }
   564  0778  2F7A               	goto	l84
   565  0779                     l83:	
   566                           
   567                           ;SW_Control_Program.c: 165: else{
   568                           ;SW_Control_Program.c: 166: RA2=0;
   569  0779  110C               	bcf	12,2	;volatile
   570  077A                     l84:	
   571                           
   572                           ;SW_Control_Program.c: 167: }
   573                           ;SW_Control_Program.c: 170: if(RC1==1){
   574  077A  1C8E               	btfss	14,1	;volatile
   575  077B  2F7E               	goto	l85
   576                           
   577                           ;SW_Control_Program.c: 171: RA3=1;
   578  077C  158C               	bsf	12,3	;volatile
   579                           
   580                           ;SW_Control_Program.c: 172: }
   581  077D  2F7F               	goto	l86
   582  077E                     l85:	
   583                           
   584                           ;SW_Control_Program.c: 173: else{
   585                           ;SW_Control_Program.c: 174: RA3=0;
   586  077E  118C               	bcf	12,3	;volatile
   587  077F                     l86:	
   588                           
   589                           ;SW_Control_Program.c: 175: }
   590                           ;SW_Control_Program.c: 178: if(RC2==1){
   591  077F  1D0E               	btfss	14,2	;volatile
   592  0780  2F83               	goto	l87
   593                           
   594                           ;SW_Control_Program.c: 179: RA4=1;
   595  0781  160C               	bsf	12,4	;volatile
   596                           
   597                           ;SW_Control_Program.c: 180: }
   598  0782  2F84               	goto	l88
   599  0783                     l87:	
   600                           
   601                           ;SW_Control_Program.c: 181: else{
   602                           ;SW_Control_Program.c: 182: RA4=0;
   603  0783  120C               	bcf	12,4	;volatile
   604  0784                     l88:	
   605                           
   606                           ;SW_Control_Program.c: 183: }
   607                           ;SW_Control_Program.c: 186: if(RC3==1){
   608  0784  1D8E               	btfss	14,3	;volatile
   609  0785  2F88               	goto	l89
   610                           
   611                           ;SW_Control_Program.c: 187: RA5=1;
   612  0786  168C               	bsf	12,5	;volatile
   613                           
   614                           ;SW_Control_Program.c: 188: }
   615  0787  0008               	return
   616  0788                     l89:	
   617                           
   618                           ;SW_Control_Program.c: 190: else{
   619                           ;SW_Control_Program.c: 191: RA5=0;
   620  0788  128C               	bcf	12,5	;volatile
   621  0789  0008               	return
   622  078A                     __end_of_Bit4_data:	
   623  007E                     btemp	set	126	;btemp
   624  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      1       7
    BANK0            80      0       0
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              0 COMMON     1     1      0
                          _Bit4_data
                         _Usart_data
 ---------------------------------------------------------------------------------
 (1) _Usart_data                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Bit4_data                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Bit4_data
   _Usart_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      1       7       2       50.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       7       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0       7       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Thu Jun 22 23:05:05 2017

                      _i 0070              __CFG_CP$OFF 0000                       l83 0779  
                     l67 07E3                       l84 077A                       l85 077E  
                     l86 077F                       l87 0783                       l88 0784  
                     l89 0788              __CFG_LVP$ON 0000                      l573 07A3  
                    l565 0793                      l577 07AB                      l569 079B  
                    l597 07D2                      _RA2 0062                      _RA3 0063  
                    _RC0 0070                      _RA4 0064                      _RC1 0071  
                    _RA5 0065                      _RC2 0072                      _RC3 0073  
                    _RC4 0074                      u105 07DA                      u127 07CD  
                    u137 07DF                      u147 07F2             __CFG_CPD$OFF 0000  
           __CFG_BORV$LO 0000                      wreg 0009                     _TXIF 008C  
           __CFG_WRT$OFF 0000                     _main 07B4                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0001            __CFG_IESO$OFF 0000  
                  ?_main 0076            __CFG_WDTE$OFF 0000                    _SPBRG 019B  
                  _PORTA 000C                    _PORTC 000E                    _TRISA 008C  
                  _TRISC 008E                    _TXREG 019A                    _TXSTA 019E  
         __CFG_FCMEN$OFF 0000                    wtemp0 007E       __size_of_Bit4_data 0016  
         __CFG_MCLRE$OFF 0000          __initialization 07F8             __end_of_main 07F8  
                 ??_main 0076           __CFG_PLLEN$OFF 0000                   _ANSELA 018C  
                 _ANSELC 018E                   _OSCCON 0099                   _SPBRGH 019C  
         __CFG_PWRTE$OFF 0000           __CFG_STVREN$ON 0000        __end_of_Bit4_data 078A  
__end_of__initialization 07FE               _Usart_data 078A           __pcstackCOMMON 0076  
             __pmaintext 07B4                  _TXCKSEL 08EA              ?_Usart_data 0076  
                __ptext1 078A                  __ptext2 0774                  _tx_data 0074  
   end_of_initialization 07FE                _RCSTAbits 019D      __size_of_Usart_data 002A  
       __CFG_FOSC$INTOSC 0000                _Bit4_data 0774              _BAUDCONbits 019F  
    start_initialization 07F8               ?_Bit4_data 0076              __pbssCOMMON 0070  
              ___latbits 0000             ??_Usart_data 0076       __end_of_Usart_data 07B4  
            ??_Bit4_data 0076                _tx_before 0072            __size_of_main 0044  
      __CFG_CLKOUTEN$OFF 0000  
