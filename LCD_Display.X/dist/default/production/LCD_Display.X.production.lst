

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Fri Jun 23 12:12:16 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F1938
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	cinit,global,class=CODE,merge=1,delta=2
    19                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	inittext,global,class=CODE,delta=2
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2
    31                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,inline,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 1.42
    42                           ; Generated 13/04/2017 GMT
    43                           ; 
    44                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F1938 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  0110                     	;# 
   127  0111                     	;# 
   128  0112                     	;# 
   129  0113                     	;# 
   130  0114                     	;# 
   131  0115                     	;# 
   132  0116                     	;# 
   133  0117                     	;# 
   134  0118                     	;# 
   135  0119                     	;# 
   136  011A                     	;# 
   137  011B                     	;# 
   138  011D                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0191                     	;# 
   142  0191                     	;# 
   143  0192                     	;# 
   144  0193                     	;# 
   145  0193                     	;# 
   146  0193                     	;# 
   147  0194                     	;# 
   148  0195                     	;# 
   149  0196                     	;# 
   150  0199                     	;# 
   151  019A                     	;# 
   152  019B                     	;# 
   153  019B                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019C                     	;# 
   157  019C                     	;# 
   158  019D                     	;# 
   159  019E                     	;# 
   160  019F                     	;# 
   161  020D                     	;# 
   162  0210                     	;# 
   163  0211                     	;# 
   164  0212                     	;# 
   165  0213                     	;# 
   166  0214                     	;# 
   167  0215                     	;# 
   168  0215                     	;# 
   169  0216                     	;# 
   170  0217                     	;# 
   171  0291                     	;# 
   172  0291                     	;# 
   173  0292                     	;# 
   174  0293                     	;# 
   175  0294                     	;# 
   176  0295                     	;# 
   177  0295                     	;# 
   178  0296                     	;# 
   179  0298                     	;# 
   180  0298                     	;# 
   181  0299                     	;# 
   182  029A                     	;# 
   183  029B                     	;# 
   184  029C                     	;# 
   185  029C                     	;# 
   186  029D                     	;# 
   187  029E                     	;# 
   188  029F                     	;# 
   189  0311                     	;# 
   190  0311                     	;# 
   191  0312                     	;# 
   192  0313                     	;# 
   193  0314                     	;# 
   194  0315                     	;# 
   195  0315                     	;# 
   196  0316                     	;# 
   197  0318                     	;# 
   198  0318                     	;# 
   199  0319                     	;# 
   200  031A                     	;# 
   201  031C                     	;# 
   202  031C                     	;# 
   203  031D                     	;# 
   204  031E                     	;# 
   205  0394                     	;# 
   206  0395                     	;# 
   207  0396                     	;# 
   208  0415                     	;# 
   209  0416                     	;# 
   210  0417                     	;# 
   211  041C                     	;# 
   212  041D                     	;# 
   213  041E                     	;# 
   214  0791                     	;# 
   215  0792                     	;# 
   216  0793                     	;# 
   217  0794                     	;# 
   218  0795                     	;# 
   219  0798                     	;# 
   220  0799                     	;# 
   221  07A0                     	;# 
   222  07A1                     	;# 
   223  07A3                     	;# 
   224  07A4                     	;# 
   225  07A6                     	;# 
   226  07A7                     	;# 
   227  07A9                     	;# 
   228  07AA                     	;# 
   229  0FE4                     	;# 
   230  0FE5                     	;# 
   231  0FE6                     	;# 
   232  0FE7                     	;# 
   233  0FE8                     	;# 
   234  0FE9                     	;# 
   235  0FEA                     	;# 
   236  0FEB                     	;# 
   237  0FED                     	;# 
   238  0FEE                     	;# 
   239  0FEF                     	;# 
   240  0000                     	;# 
   241  0001                     	;# 
   242  0002                     	;# 
   243  0003                     	;# 
   244  0004                     	;# 
   245  0005                     	;# 
   246  0006                     	;# 
   247  0007                     	;# 
   248  0008                     	;# 
   249  0009                     	;# 
   250  000A                     	;# 
   251  000B                     	;# 
   252  000C                     	;# 
   253  000D                     	;# 
   254  000E                     	;# 
   255  0010                     	;# 
   256  0011                     	;# 
   257  0012                     	;# 
   258  0013                     	;# 
   259  0015                     	;# 
   260  0016                     	;# 
   261  0016                     	;# 
   262  0017                     	;# 
   263  0018                     	;# 
   264  0019                     	;# 
   265  001A                     	;# 
   266  001B                     	;# 
   267  001C                     	;# 
   268  001E                     	;# 
   269  001F                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0095                     	;# 
   278  0096                     	;# 
   279  0097                     	;# 
   280  0098                     	;# 
   281  0099                     	;# 
   282  009A                     	;# 
   283  009B                     	;# 
   284  009B                     	;# 
   285  009C                     	;# 
   286  009D                     	;# 
   287  009E                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  0110                     	;# 
   292  0111                     	;# 
   293  0112                     	;# 
   294  0113                     	;# 
   295  0114                     	;# 
   296  0115                     	;# 
   297  0116                     	;# 
   298  0117                     	;# 
   299  0118                     	;# 
   300  0119                     	;# 
   301  011A                     	;# 
   302  011B                     	;# 
   303  011D                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  0191                     	;# 
   307  0191                     	;# 
   308  0192                     	;# 
   309  0193                     	;# 
   310  0193                     	;# 
   311  0193                     	;# 
   312  0194                     	;# 
   313  0195                     	;# 
   314  0196                     	;# 
   315  0199                     	;# 
   316  019A                     	;# 
   317  019B                     	;# 
   318  019B                     	;# 
   319  019B                     	;# 
   320  019B                     	;# 
   321  019C                     	;# 
   322  019C                     	;# 
   323  019D                     	;# 
   324  019E                     	;# 
   325  019F                     	;# 
   326  020D                     	;# 
   327  0210                     	;# 
   328  0211                     	;# 
   329  0212                     	;# 
   330  0213                     	;# 
   331  0214                     	;# 
   332  0215                     	;# 
   333  0215                     	;# 
   334  0216                     	;# 
   335  0217                     	;# 
   336  0291                     	;# 
   337  0291                     	;# 
   338  0292                     	;# 
   339  0293                     	;# 
   340  0294                     	;# 
   341  0295                     	;# 
   342  0295                     	;# 
   343  0296                     	;# 
   344  0298                     	;# 
   345  0298                     	;# 
   346  0299                     	;# 
   347  029A                     	;# 
   348  029B                     	;# 
   349  029C                     	;# 
   350  029C                     	;# 
   351  029D                     	;# 
   352  029E                     	;# 
   353  029F                     	;# 
   354  0311                     	;# 
   355  0311                     	;# 
   356  0312                     	;# 
   357  0313                     	;# 
   358  0314                     	;# 
   359  0315                     	;# 
   360  0315                     	;# 
   361  0316                     	;# 
   362  0318                     	;# 
   363  0318                     	;# 
   364  0319                     	;# 
   365  031A                     	;# 
   366  031C                     	;# 
   367  031C                     	;# 
   368  031D                     	;# 
   369  031E                     	;# 
   370  0394                     	;# 
   371  0395                     	;# 
   372  0396                     	;# 
   373  0415                     	;# 
   374  0416                     	;# 
   375  0417                     	;# 
   376  041C                     	;# 
   377  041D                     	;# 
   378  041E                     	;# 
   379  0791                     	;# 
   380  0792                     	;# 
   381  0793                     	;# 
   382  0794                     	;# 
   383  0795                     	;# 
   384  0798                     	;# 
   385  0799                     	;# 
   386  07A0                     	;# 
   387  07A1                     	;# 
   388  07A3                     	;# 
   389  07A4                     	;# 
   390  07A6                     	;# 
   391  07A7                     	;# 
   392  07A9                     	;# 
   393  07AA                     	;# 
   394  0FE4                     	;# 
   395  0FE5                     	;# 
   396  0FE6                     	;# 
   397  0FE7                     	;# 
   398  0FE8                     	;# 
   399  0FE9                     	;# 
   400  0FEA                     	;# 
   401  0FEB                     	;# 
   402  0FED                     	;# 
   403  0FEE                     	;# 
   404  0FEF                     	;# 
   405                           
   406                           	psect	idataBANK0
   407  0411                     __pidataBANK0:	
   408                           
   409                           ;initializer for _c
   410  0411  3430               	retlw	48
   411  0412  3400               	retlw	0
   412                           
   413                           ;initializer for _b
   414  0413  3430               	retlw	48
   415  0414  3400               	retlw	0
   416                           
   417                           ;initializer for _a
   418  0415  3430               	retlw	48
   419  0416  3400               	retlw	0
   420                           
   421                           ;initializer for _moji3
   422  0417  3470               	retlw	112
   423  0418  3461               	retlw	97
   424  0419  3472               	retlw	114
   425  041A  3461               	retlw	97
   426  041B  3400               	retlw	0
   427                           
   428                           ;initializer for _moji2
   429  041C  3470               	retlw	112
   430  041D  3461               	retlw	97
   431  041E  3472               	retlw	114
   432  041F  3461               	retlw	97
   433  0420  3400               	retlw	0
   434                           
   435                           ;initializer for _moji1
   436  0421  3470               	retlw	112
   437  0422  3461               	retlw	97
   438  0423  3472               	retlw	114
   439  0424  3461               	retlw	97
   440  0425  3400               	retlw	0
   441  000E                     _PORTC	set	14
   442  000D                     _PORTB	set	13
   443  000C                     _PORTA	set	12
   444  005F                     _GIE	set	95
   445  005E                     _PEIE	set	94
   446  008D                     _RCIF	set	141
   447  008E                     _TRISC	set	142
   448  008D                     _TRISB	set	141
   449  008C                     _TRISA	set	140
   450  0099                     _OSCCON	set	153
   451  048D                     _RCIE	set	1165
   452  0868                     _LATB0	set	2152
   453  0869                     _LATB1	set	2153
   454  086A                     _LATB2	set	2154
   455  086B                     _LATB3	set	2155
   456  086C                     _LATB4	set	2156
   457  086D                     _LATB5	set	2157
   458  086E                     _LATB6	set	2158
   459  086F                     _LATB7	set	2159
   460  0861                     _LATA1	set	2145
   461  0862                     _LATA2	set	2146
   462  0860                     _LATA0	set	2144
   463  018D                     _ANSELB	set	397
   464  018C                     _ANSELA	set	396
   465  019B                     _SPBRG	set	411
   466  0199                     _RCREG	set	409
   467  019D                     _RCSTA	set	413
   468  0CF2                     _BRGH	set	3314
   469  0CFB                     _BRG16	set	3323
   470  0CF4                     _SYNC	set	3316
   471  0CE9                     _OERR	set	3305
   472                           
   473                           	psect	stringtext1
   474  0474                     __pstringtext1:	
   475  0474                     STR_1:	
   476  0474  346B               	retlw	107	;'k'
   477  0475  346D               	retlw	109	;'m'
   478  0476  342F               	retlw	47	;'/'
   479  0477  3468               	retlw	104	;'h'
   480  0478  3400               	retlw	0
   481                           
   482                           	psect	stringtext2
   483  0479                     __pstringtext2:	
   484  0479                     STR_32:	
   485  0479  342E               	retlw	46	;'.'
   486  047A  3400               	retlw	0
   487                           
   488                           	psect	stringtext3
   489  047B                     __pstringtext3:	
   490  047B                     STR_2:	
   491  047B  3430               	retlw	48	;'0'
   492  047C  3400               	retlw	0
   493                           
   494                           	psect	stringtext4
   495  047D                     __pstringtext4:	
   496  047D                     STR_3:	
   497  047D  3431               	retlw	49	;'1'
   498  047E  3400               	retlw	0
   499                           
   500                           	psect	stringtext5
   501  047F                     __pstringtext5:	
   502  047F                     STR_4:	
   503  047F  3432               	retlw	50	;'2'
   504  0480  3400               	retlw	0
   505                           
   506                           	psect	stringtext6
   507  0481                     __pstringtext6:	
   508  0481                     STR_5:	
   509  0481  3433               	retlw	51	;'3'
   510  0482  3400               	retlw	0
   511                           
   512                           	psect	stringtext7
   513  0483                     __pstringtext7:	
   514  0483                     STR_6:	
   515  0483  3434               	retlw	52	;'4'
   516  0484  3400               	retlw	0
   517                           
   518                           	psect	stringtext8
   519  0485                     __pstringtext8:	
   520  0485                     STR_7:	
   521  0485  3435               	retlw	53	;'5'
   522  0486  3400               	retlw	0
   523                           
   524                           	psect	stringtext9
   525  0487                     __pstringtext9:	
   526  0487                     STR_8:	
   527  0487  3436               	retlw	54	;'6'
   528  0488  3400               	retlw	0
   529                           
   530                           	psect	stringtext10
   531  0489                     __pstringtext10:	
   532  0489                     STR_9:	
   533  0489  3437               	retlw	55	;'7'
   534  048A  3400               	retlw	0
   535                           
   536                           	psect	stringtext11
   537  048B                     __pstringtext11:	
   538  048B                     STR_10:	
   539  048B  3438               	retlw	56	;'8'
   540  048C  3400               	retlw	0
   541                           
   542                           	psect	stringtext12
   543  048D                     __pstringtext12:	
   544  048D                     STR_11:	
   545  048D  3439               	retlw	57	;'9'
   546  048E  3400               	retlw	0
   547                           
   548                           	psect	stringtext13
   549  0000                     __pstringtext13:	
   550  047B                     
   551                           ; #config settings
   552  0000                     
   553                           	psect	cinit
   554  0024                     start_initialization:	
   555  0024                     __initialization:	
   556                           
   557                           ; Initialize objects allocated to BANK0
   558  0024  3011               	movlw	low __pidataBANK0
   559  0025  0084               	movwf	4
   560  0026  3084               	movlw	(high __pidataBANK0)| (0+128)
   561  0027  0085               	movwf	5
   562  0028  3020               	movlw	low __pdataBANK0
   563  0029  0086               	movwf	6
   564  002A  3000               	movlw	high __pdataBANK0
   565  002B  0087               	movwf	7
   566  002C  3015               	movlw	21
   567  002D  3184  2468         	fcall	init_ram
   568                           
   569                           ; Clear objects allocated to COMMON
   570  002F  01F9               	clrf	__pbssCOMMON& (0+127)
   571  0030  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   572                           
   573                           ; Clear objects allocated to BANK0
   574  0031  01C4               	clrf	__pbssBANK0& (0+127)
   575  0032  01C5               	clrf	(__pbssBANK0+1)& (0+127)
   576  0033  01C6               	clrf	(__pbssBANK0+2)& (0+127)
   577  0034  01C7               	clrf	(__pbssBANK0+3)& (0+127)
   578  0035  01C8               	clrf	(__pbssBANK0+4)& (0+127)
   579  0036  01C9               	clrf	(__pbssBANK0+5)& (0+127)
   580  0037  01CA               	clrf	(__pbssBANK0+6)& (0+127)
   581  0038  01CB               	clrf	(__pbssBANK0+7)& (0+127)
   582  0039  01CC               	clrf	(__pbssBANK0+8)& (0+127)
   583  003A                     end_of_initialization:	
   584                           ;End of C runtime variable initialization code
   585                           
   586  003A                     __end_of__initialization:	
   587  003A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   588  003B  0020               	movlb	0
   589  003C  3182  2AAF         	ljmp	_main	;jump to C main() function
   590                           
   591                           	psect	bssCOMMON
   592  0079                     __pbssCOMMON:	
   593  0079                     _num1:	
   594  0079                     	ds	2
   595                           
   596                           	psect	bssBANK0
   597  0044                     __pbssBANK0:	
   598  0044                     _rx_data:	
   599  0044                     	ds	2
   600  0046                     _num3:	
   601  0046                     	ds	2
   602  0048                     _num2:	
   603  0048                     	ds	2
   604  004A                     _i:	
   605  004A                     	ds	2
   606  004C                     _rx_flag:	
   607  004C                     	ds	1
   608                           
   609                           	psect	dataBANK0
   610  0020                     __pdataBANK0:	
   611  0020                     _c:	
   612  0020                     	ds	2
   613  0022                     _b:	
   614  0022                     	ds	2
   615  0024                     _a:	
   616  0024                     	ds	2
   617  0026                     _moji3:	
   618  0026                     	ds	5
   619  002B                     _moji2:	
   620  002B                     	ds	5
   621  0030                     _moji1:	
   622  0030                     	ds	5
   623                           
   624                           	psect	inittext
   625  0468                     init_ram:	
   626  0468  00FE               	movwf	126
   627  0469                     initloop:	
   628  0469  0012               	moviw fsr0++
   629  046A  001E               	movwi fsr1++
   630  046B  0BFE               	decfsz	126,f
   631  046C  2C69               	goto	initloop
   632  046D  3400               	retlw	0
   633                           
   634                           	psect	cstackCOMMON
   635  0070                     __pcstackCOMMON:	
   636  0070                     ?_initializePort:	
   637  0070                     ?_lcdClear:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_read:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_lcdCommand:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_lcdWrite:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_lcdPulseEnable:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_ISR:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ??_ISR:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_main:	
   659                           ; 1 bytes @ 0x0
   660                           
   661                           
   662                           ; 1 bytes @ 0x0
   663  0070                     	ds	3
   664  0073                     ??_initializePort:	
   665  0073                     ?_strcpy:	
   666                           ; 1 bytes @ 0x3
   667                           
   668  0073                     ?_strcat:	
   669                           ; 1 bytes @ 0x3
   670                           
   671  0073                     ?_lcdSend:	
   672                           ; 1 bytes @ 0x3
   673                           
   674  0073                     ??_lcdPulseEnable:	
   675                           ; 1 bytes @ 0x3
   676                           
   677  0073                     lcdSend@mode:	
   678                           ; 1 bytes @ 0x3
   679                           
   680  0073                     strcat@from:	
   681                           ; 1 bytes @ 0x3
   682                           
   683  0073                     strcpy@from:	
   684                           ; 2 bytes @ 0x3
   685                           
   686                           
   687                           ; 2 bytes @ 0x3
   688  0073                     	ds	1
   689  0074                     ??_lcdSend:	
   690                           
   691                           ; 1 bytes @ 0x4
   692  0074                     	ds	1
   693  0075                     ??_strcpy:	
   694  0075                     ??_strcat:	
   695                           ; 1 bytes @ 0x5
   696                           
   697  0075                     lcdSend@val:	
   698                           ; 1 bytes @ 0x5
   699                           
   700                           
   701                           ; 1 bytes @ 0x5
   702  0075                     	ds	1
   703  0076                     ??_lcdCommand:	
   704  0076                     ??_lcdWrite:	
   705                           ; 1 bytes @ 0x6
   706                           
   707  0076                     lcdCommand@com:	
   708                           ; 1 bytes @ 0x6
   709                           
   710  0076                     lcdWrite@val:	
   711                           ; 1 bytes @ 0x6
   712                           
   713  0076                     strcat@cp:	
   714                           ; 1 bytes @ 0x6
   715                           
   716  0076                     strcpy@cp:	
   717                           ; 1 bytes @ 0x6
   718                           
   719                           
   720                           ; 1 bytes @ 0x6
   721  0076                     	ds	1
   722  0077                     ??_lcdBegin:	
   723  0077                     ??_lcdClear:	
   724                           ; 1 bytes @ 0x7
   725                           
   726  0077                     ?_lcdSetCursor:	
   727                           ; 1 bytes @ 0x7
   728                           
   729  0077                     ?_lcdPrint:	
   730                           ; 1 bytes @ 0x7
   731                           
   732  0077                     lcdSetCursor@col:	
   733                           ; 1 bytes @ 0x7
   734                           
   735  0077                     strcat@to:	
   736                           ; 1 bytes @ 0x7
   737                           
   738  0077                     strcpy@to:	
   739                           ; 1 bytes @ 0x7
   740                           
   741  0077                     lcdPrint@str:	
   742                           ; 1 bytes @ 0x7
   743                           
   744                           
   745                           ; 2 bytes @ 0x7
   746  0077                     	ds	1
   747  0078                     ??_read:	
   748  0078                     lcdBegin@lcd:	
   749                           ; 1 bytes @ 0x8
   750                           
   751  0078                     lcdSetCursor@line:	
   752                           ; 1 bytes @ 0x8
   753                           
   754                           
   755                           ; 1 bytes @ 0x8
   756  0078                     	ds	1
   757                           
   758                           	psect	cstackBANK0
   759  0035                     __pcstackBANK0:	
   760  0035                     ?_lcdBegin:	
   761  0035                     ??_lcdSetCursor:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0035                     ??_lcdPrint:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0035                     lcdBegin@cols:	
   768                           ; 1 bytes @ 0x0
   769                           
   770                           
   771                           ; 1 bytes @ 0x0
   772  0035                     	ds	1
   773  0036                     lcdBegin@lines:	
   774  0036                     lcdSetCursor@lcd:	
   775                           ; 1 bytes @ 0x1
   776                           
   777                           
   778                           ; 1 bytes @ 0x1
   779  0036                     	ds	1
   780  0037                     lcdBegin@charsize:	
   781                           
   782                           ; 1 bytes @ 0x2
   783  0037                     	ds	1
   784  0038                     ??_main:	
   785                           
   786                           ; 1 bytes @ 0x3
   787  0038                     	ds	2
   788  003A                     main@lcd:	
   789                           
   790                           ; 10 bytes @ 0x5
   791  003A                     	ds	10
   792                           
   793                           	psect	maintext
   794  02AF                     __pmaintext:	
   795 ;;
   796 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   797 ;;
   798 ;; *************** function _main *****************
   799 ;; Defined at:
   800 ;;		line 68 in file "LCD_Display_Program.c"
   801 ;; Parameters:    Size  Location     Type
   802 ;;		None
   803 ;; Auto vars:     Size  Location     Type
   804 ;;  lcd            10    5[BANK0 ] struct _Lcd
   805 ;; Return value:  Size  Location     Type
   806 ;;                  1    wreg      void 
   807 ;; Registers used:
   808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   809 ;; Tracked objects:
   810 ;;		On entry : B1F/0
   811 ;;		On exit  : 0/0
   812 ;;		Unchanged: 0/0
   813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   815 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
   816 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   817 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
   818 ;;Total ram usage:       12 bytes
   819 ;; Hardware stack levels required when called:    5
   820 ;; This function calls:
   821 ;;		_initializePort
   822 ;;		_lcdBegin
   823 ;;		_lcdClear
   824 ;;		_lcdPrint
   825 ;;		_lcdSetCursor
   826 ;;		_read
   827 ;; This function is called by:
   828 ;;		Startup code after reset
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832                           
   833                           ;psect for function _main
   834  02AF                     _main:	
   835                           
   836                           ;LCD_Display_Program.c: 70: OSCCON = 0b01110010;
   837                           
   838                           ;incstack = 0
   839                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   840  02AF  3072               	movlw	114
   841  02B0  0021               	movlb	1	; select bank1
   842  02B1  0099               	movwf	25	;volatile
   843                           
   844                           ;LCD_Display_Program.c: 75: RCSTA=0x90;
   845  02B2  3090               	movlw	144
   846  02B3  0023               	movlb	3	; select bank3
   847  02B4  009D               	movwf	29	;volatile
   848                           
   849                           ;LCD_Display_Program.c: 78: SYNC=0;
   850  02B5  121E               	bcf	30,4	;volatile
   851                           
   852                           ;LCD_Display_Program.c: 79: BRG16=0;
   853  02B6  119F               	bcf	31,3	;volatile
   854                           
   855                           ;LCD_Display_Program.c: 80: BRGH=1;
   856  02B7  151E               	bsf	30,2	;volatile
   857                           
   858                           ;LCD_Display_Program.c: 81: SPBRG=51;
   859  02B8  3033               	movlw	51
   860  02B9  009B               	movwf	27	;volatile
   861                           
   862                           ;LCD_Display_Program.c: 86: RCIF=0;
   863  02BA  0020               	movlb	0	; select bank0
   864  02BB  1291               	bcf	17,5	;volatile
   865                           
   866                           ;LCD_Display_Program.c: 87: RCIE=1;
   867  02BC  0021               	movlb	1	; select bank1
   868  02BD  1691               	bsf	17,5	;volatile
   869                           
   870                           ;LCD_Display_Program.c: 88: PEIE=1;
   871  02BE  170B               	bsf	11,6	;volatile
   872                           
   873                           ;LCD_Display_Program.c: 89: GIE=1;
   874  02BF  178B               	bsf	11,7	;volatile
   875                           
   876                           ;LCD_Display_Program.c: 92: initializePort();
   877  02C0  3184  2454  3182   	fcall	_initializePort
   878                           
   879                           ;LCD_Display_Program.c: 95: LCD lcd;
   880                           ;LCD_Display_Program.c: 97: lcdBegin(&lcd, 16, 2, 0x00);
   881  02C3  3010               	movlw	16
   882  02C4  0020               	movlb	0	; select bank0
   883  02C5  00B8               	movwf	??_main
   884  02C6  0838               	movf	??_main,w
   885  02C7  00B5               	movwf	lcdBegin@cols
   886  02C8  3002               	movlw	2
   887  02C9  00B9               	movwf	??_main+1
   888  02CA  0839               	movf	??_main+1,w
   889  02CB  00B6               	movwf	lcdBegin@lines
   890  02CC  01B7               	clrf	lcdBegin@charsize
   891  02CD  303A               	movlw	(low (main@lcd| 0))& (0+255)
   892  02CE  3181  21FD  3182   	fcall	_lcdBegin
   893  02D1                     l1497:	
   894                           ;LCD_Display_Program.c: 99: while(1){
   895                           
   896                           
   897                           ;LCD_Display_Program.c: 101: for(i=0;i<4;i++){
   898  02D1  0020               	movlb	0	; select bank0
   899  02D2  01CA               	clrf	_i
   900  02D3  01CB               	clrf	_i+1
   901  02D4  084B               	movf	_i+1,w
   902  02D5  3A80               	xorlw	128
   903  02D6  00B8               	movwf	??_main
   904  02D7  3080               	movlw	128
   905  02D8  0238               	subwf	??_main,w
   906  02D9  1D03               	skipz
   907  02DA  2ADD               	goto	u1835
   908  02DB  3004               	movlw	4
   909  02DC  024A               	subwf	_i,w
   910  02DD                     u1835:	
   911  02DD  1803               	btfsc	3,0
   912  02DE  2B1C               	goto	l1525
   913  02DF                     l1503:	
   914                           ;LCD_Display_Program.c: 102: while(!rx_flag);
   915                           
   916  02DF  0020               	movlb	0	; select bank0
   917  02E0  084C               	movf	_rx_flag,w
   918  02E1  1903               	btfsc	3,2
   919  02E2  2ADF               	goto	l1503
   920                           
   921                           ;LCD_Display_Program.c: 103: rx_flag=0;
   922  02E3  01CC               	clrf	_rx_flag
   923                           
   924                           ;LCD_Display_Program.c: 104: if(i==0&&rx_data!=0xFF) i--;
   925  02E4  084A               	movf	_i,w
   926  02E5  044B               	iorwf	_i+1,w
   927  02E6  1D03               	btfss	3,2
   928  02E7  2AF1               	goto	l1513
   929  02E8  0A44               	incf	_rx_data,w
   930  02E9  0445               	iorwf	_rx_data+1,w
   931  02EA  1903               	btfsc	3,2
   932  02EB  2AF1               	goto	l1513
   933  02EC  30FF               	movlw	255
   934  02ED  07CA               	addwf	_i,f
   935  02EE  30FF               	movlw	255
   936  02EF  3DCB               	addwfc	_i+1,f
   937  02F0  2B0D               	goto	l100
   938  02F1                     l1513:	
   939                           
   940                           ;LCD_Display_Program.c: 105: else if(i==1) a=rx_data;
   941  02F1  034A               	decf	_i,w
   942  02F2  044B               	iorwf	_i+1,w
   943  02F3  1D03               	btfss	3,2
   944  02F4  2AFA               	goto	l1517
   945  02F5  0845               	movf	_rx_data+1,w
   946  02F6  00A5               	movwf	_a+1
   947  02F7  0844               	movf	_rx_data,w
   948  02F8  00A4               	movwf	_a
   949  02F9  2B0D               	goto	l100
   950  02FA                     l1517:	
   951                           
   952                           ;LCD_Display_Program.c: 106: else if(i==2) b=rx_data;
   953  02FA  3002               	movlw	2
   954  02FB  064A               	xorwf	_i,w
   955  02FC  044B               	iorwf	_i+1,w
   956  02FD  1D03               	btfss	3,2
   957  02FE  2B04               	goto	l1521
   958  02FF  0845               	movf	_rx_data+1,w
   959  0300  00A3               	movwf	_b+1
   960  0301  0844               	movf	_rx_data,w
   961  0302  00A2               	movwf	_b
   962  0303  2B0D               	goto	l100
   963  0304                     l1521:	
   964                           
   965                           ;LCD_Display_Program.c: 107: else if(i==3) c=rx_data;
   966  0304  3003               	movlw	3
   967  0305  064A               	xorwf	_i,w
   968  0306  044B               	iorwf	_i+1,w
   969  0307  1D03               	btfss	3,2
   970  0308  2B0D               	goto	l100
   971  0309  0845               	movf	_rx_data+1,w
   972  030A  00A1               	movwf	_c+1
   973  030B  0844               	movf	_rx_data,w
   974  030C  00A0               	movwf	_c
   975  030D                     l100:	
   976  030D  3001               	movlw	1
   977  030E  07CA               	addwf	_i,f
   978  030F  3000               	movlw	0
   979  0310  3DCB               	addwfc	_i+1,f
   980  0311  084B               	movf	_i+1,w
   981  0312  3A80               	xorlw	128
   982  0313  00B8               	movwf	??_main
   983  0314  3080               	movlw	128
   984  0315  0238               	subwf	??_main,w
   985  0316  1D03               	skipz
   986  0317  2B1A               	goto	u1905
   987  0318  3004               	movlw	4
   988  0319  024A               	subwf	_i,w
   989  031A                     u1905:	
   990  031A  1C03               	skipc
   991  031B  2ADF               	goto	l1503
   992  031C                     l1525:	
   993                           
   994                           ;LCD_Display_Program.c: 108: }
   995                           ;LCD_Display_Program.c: 110: lcdClear();
   996  031C  3184  243A  3182   	fcall	_lcdClear
   997                           
   998                           ;LCD_Display_Program.c: 111: read();
   999  031F  3180  203E  3182   	fcall	_read
  1000                           
  1001                           ;LCD_Display_Program.c: 113: lcdSetCursor(&lcd, 0, 0);
  1002  0322  01F7               	clrf	lcdSetCursor@col
  1003  0323  01F8               	clrf	lcdSetCursor@line
  1004  0324  303A               	movlw	(low (main@lcd| 0))& (0+255)
  1005  0325  3183  23D3  3182   	fcall	_lcdSetCursor
  1006                           
  1007                           ;LCD_Display_Program.c: 114: lcdPrint(moji1);
  1008  0328  3030               	movlw	low _moji1
  1009  0329  00F7               	movwf	lcdPrint@str
  1010  032A  3000               	movlw	high _moji1
  1011  032B  00F8               	movwf	lcdPrint@str+1
  1012  032C  3184  2426  3182   	fcall	_lcdPrint
  1013                           
  1014                           ;LCD_Display_Program.c: 115: lcdSetCursor(&lcd, 0, 1);
  1015  032F  01F7               	clrf	lcdSetCursor@col
  1016  0330  01F8               	clrf	lcdSetCursor@line
  1017  0331  0AF8               	incf	lcdSetCursor@line,f
  1018  0332  303A               	movlw	(low (main@lcd| 0))& (0+255)
  1019  0333  3183  23D3  3182   	fcall	_lcdSetCursor
  1020                           
  1021                           ;LCD_Display_Program.c: 116: lcdPrint("km/h");
  1022  0336  3074               	movlw	low (STR_1| (0+32768))
  1023  0337  00F7               	movwf	lcdPrint@str
  1024  0338  3084               	movlw	high (STR_1| (0+32768))
  1025  0339  00F8               	movwf	lcdPrint@str+1
  1026  033A  3184  2426  3182   	fcall	_lcdPrint
  1027  033D  2AD1               	goto	l1497
  1028  033E                     __end_of_main:	
  1029                           
  1030                           	psect	text1
  1031  003E                     __ptext1:	
  1032 ;; *************** function _read *****************
  1033 ;; Defined at:
  1034 ;;		line 124 in file "LCD_Display_Program.c"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;		None
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;		None
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  1    wreg      void 
  1041 ;; Registers used:
  1042 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1052 ;;Total ram usage:        0 bytes
  1053 ;; Hardware stack levels used:    1
  1054 ;; Hardware stack levels required when called:    2
  1055 ;; This function calls:
  1056 ;;		_strcat
  1057 ;;		_strcpy
  1058 ;; This function is called by:
  1059 ;;		_main
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           
  1064                           ;psect for function _read
  1065  003E                     _read:	
  1066                           
  1067                           ;LCD_Display_Program.c: 126: num1=a-0x30;
  1068                           
  1069                           ;incstack = 0
  1070                           ; Regs used in _read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1071  003E  0020               	movlb	0	; select bank0
  1072  003F  0824               	movf	_a,w
  1073  0040  3ED0               	addlw	208
  1074  0041  00F9               	movwf	_num1
  1075  0042  30FF               	movlw	255
  1076  0043  3D25               	addwfc	_a+1,w
  1077  0044  00FA               	movwf	_num1+1
  1078                           
  1079                           ;LCD_Display_Program.c: 127: num2=b-0x30;
  1080  0045  0822               	movf	_b,w
  1081  0046  3ED0               	addlw	208
  1082  0047  00C8               	movwf	_num2
  1083  0048  30FF               	movlw	255
  1084  0049  3D23               	addwfc	_b+1,w
  1085  004A  00C9               	movwf	_num2+1
  1086                           
  1087                           ;LCD_Display_Program.c: 128: num3=c-0x30;
  1088  004B  0820               	movf	_c,w
  1089  004C  3ED0               	addlw	208
  1090  004D  00C6               	movwf	_num3
  1091  004E  30FF               	movlw	255
  1092  004F  3D21               	addwfc	_c+1,w
  1093  0050  00C7               	movwf	_num3+1
  1094                           
  1095                           ;LCD_Display_Program.c: 131: if(num1==0) strcpy(moji1,"0");
  1096  0051  0879               	movf	_num1,w
  1097  0052  047A               	iorwf	_num1+1,w
  1098  0053  1D03               	btfss	3,2
  1099  0054  285D               	goto	l1145
  1100  0055  307B               	movlw	low (STR_2| (0+32768))
  1101  0056  00F3               	movwf	strcpy@from
  1102  0057  3084               	movlw	high (STR_2| (0+32768))
  1103  0058  00F4               	movwf	strcpy@from+1
  1104  0059  3030               	movlw	(low (_moji1| 0))& (0+255)
  1105  005A  3183  23F7  3180   	fcall	_strcpy
  1106  005D                     l1145:	
  1107                           
  1108                           ;LCD_Display_Program.c: 132: if(num1==1) strcpy(moji1,"1");
  1109  005D  0379               	decf	_num1,w
  1110  005E  047A               	iorwf	_num1+1,w
  1111  005F  1D03               	btfss	3,2
  1112  0060  2869               	goto	l1149
  1113  0061  307D               	movlw	low (STR_3| (0+32768))
  1114  0062  00F3               	movwf	strcpy@from
  1115  0063  3084               	movlw	high (STR_3| (0+32768))
  1116  0064  00F4               	movwf	strcpy@from+1
  1117  0065  3030               	movlw	(low (_moji1| 0))& (0+255)
  1118  0066  3183  23F7  3180   	fcall	_strcpy
  1119  0069                     l1149:	
  1120                           
  1121                           ;LCD_Display_Program.c: 133: if(num1==2) strcpy(moji1,"2");
  1122  0069  3002               	movlw	2
  1123  006A  0679               	xorwf	_num1,w
  1124  006B  047A               	iorwf	_num1+1,w
  1125  006C  1D03               	btfss	3,2
  1126  006D  2876               	goto	l1153
  1127  006E  307F               	movlw	low (STR_4| (0+32768))
  1128  006F  00F3               	movwf	strcpy@from
  1129  0070  3084               	movlw	high (STR_4| (0+32768))
  1130  0071  00F4               	movwf	strcpy@from+1
  1131  0072  3030               	movlw	(low (_moji1| 0))& (0+255)
  1132  0073  3183  23F7  3180   	fcall	_strcpy
  1133  0076                     l1153:	
  1134                           
  1135                           ;LCD_Display_Program.c: 134: if(num1==3) strcpy(moji1,"3");
  1136  0076  3003               	movlw	3
  1137  0077  0679               	xorwf	_num1,w
  1138  0078  047A               	iorwf	_num1+1,w
  1139  0079  1D03               	btfss	3,2
  1140  007A  2883               	goto	l1157
  1141  007B  3081               	movlw	low (STR_5| (0+32768))
  1142  007C  00F3               	movwf	strcpy@from
  1143  007D  3084               	movlw	high (STR_5| (0+32768))
  1144  007E  00F4               	movwf	strcpy@from+1
  1145  007F  3030               	movlw	(low (_moji1| 0))& (0+255)
  1146  0080  3183  23F7  3180   	fcall	_strcpy
  1147  0083                     l1157:	
  1148                           
  1149                           ;LCD_Display_Program.c: 135: if(num1==4) strcpy(moji1,"4");
  1150  0083  3004               	movlw	4
  1151  0084  0679               	xorwf	_num1,w
  1152  0085  047A               	iorwf	_num1+1,w
  1153  0086  1D03               	btfss	3,2
  1154  0087  2890               	goto	l1161
  1155  0088  3083               	movlw	low (STR_6| (0+32768))
  1156  0089  00F3               	movwf	strcpy@from
  1157  008A  3084               	movlw	high (STR_6| (0+32768))
  1158  008B  00F4               	movwf	strcpy@from+1
  1159  008C  3030               	movlw	(low (_moji1| 0))& (0+255)
  1160  008D  3183  23F7  3180   	fcall	_strcpy
  1161  0090                     l1161:	
  1162                           
  1163                           ;LCD_Display_Program.c: 136: if(num1==5) strcpy(moji1,"5");
  1164  0090  3005               	movlw	5
  1165  0091  0679               	xorwf	_num1,w
  1166  0092  047A               	iorwf	_num1+1,w
  1167  0093  1D03               	btfss	3,2
  1168  0094  289D               	goto	l1165
  1169  0095  3085               	movlw	low (STR_7| (0+32768))
  1170  0096  00F3               	movwf	strcpy@from
  1171  0097  3084               	movlw	high (STR_7| (0+32768))
  1172  0098  00F4               	movwf	strcpy@from+1
  1173  0099  3030               	movlw	(low (_moji1| 0))& (0+255)
  1174  009A  3183  23F7  3180   	fcall	_strcpy
  1175  009D                     l1165:	
  1176                           
  1177                           ;LCD_Display_Program.c: 137: if(num1==6) strcpy(moji1,"6");
  1178  009D  3006               	movlw	6
  1179  009E  0679               	xorwf	_num1,w
  1180  009F  047A               	iorwf	_num1+1,w
  1181  00A0  1D03               	btfss	3,2
  1182  00A1  28AA               	goto	l1169
  1183  00A2  3087               	movlw	low (STR_8| (0+32768))
  1184  00A3  00F3               	movwf	strcpy@from
  1185  00A4  3084               	movlw	high (STR_8| (0+32768))
  1186  00A5  00F4               	movwf	strcpy@from+1
  1187  00A6  3030               	movlw	(low (_moji1| 0))& (0+255)
  1188  00A7  3183  23F7  3180   	fcall	_strcpy
  1189  00AA                     l1169:	
  1190                           
  1191                           ;LCD_Display_Program.c: 138: if(num1==7) strcpy(moji1,"7");
  1192  00AA  3007               	movlw	7
  1193  00AB  0679               	xorwf	_num1,w
  1194  00AC  047A               	iorwf	_num1+1,w
  1195  00AD  1D03               	btfss	3,2
  1196  00AE  28B7               	goto	l1173
  1197  00AF  3089               	movlw	low (STR_9| (0+32768))
  1198  00B0  00F3               	movwf	strcpy@from
  1199  00B1  3084               	movlw	high (STR_9| (0+32768))
  1200  00B2  00F4               	movwf	strcpy@from+1
  1201  00B3  3030               	movlw	(low (_moji1| 0))& (0+255)
  1202  00B4  3183  23F7  3180   	fcall	_strcpy
  1203  00B7                     l1173:	
  1204                           
  1205                           ;LCD_Display_Program.c: 139: if(num1==8) strcpy(moji1,"8");
  1206  00B7  3008               	movlw	8
  1207  00B8  0679               	xorwf	_num1,w
  1208  00B9  047A               	iorwf	_num1+1,w
  1209  00BA  1D03               	btfss	3,2
  1210  00BB  28C4               	goto	l1177
  1211  00BC  308B               	movlw	low (STR_10| (0+32768))
  1212  00BD  00F3               	movwf	strcpy@from
  1213  00BE  3084               	movlw	high (STR_10| (0+32768))
  1214  00BF  00F4               	movwf	strcpy@from+1
  1215  00C0  3030               	movlw	(low (_moji1| 0))& (0+255)
  1216  00C1  3183  23F7  3180   	fcall	_strcpy
  1217  00C4                     l1177:	
  1218                           
  1219                           ;LCD_Display_Program.c: 140: if(num1==9) strcpy(moji1,"9");
  1220  00C4  3009               	movlw	9
  1221  00C5  0679               	xorwf	_num1,w
  1222  00C6  047A               	iorwf	_num1+1,w
  1223  00C7  1D03               	btfss	3,2
  1224  00C8  28D1               	goto	l1181
  1225  00C9  308D               	movlw	low (STR_11| (0+32768))
  1226  00CA  00F3               	movwf	strcpy@from
  1227  00CB  3084               	movlw	high (STR_11| (0+32768))
  1228  00CC  00F4               	movwf	strcpy@from+1
  1229  00CD  3030               	movlw	(low (_moji1| 0))& (0+255)
  1230  00CE  3183  23F7  3180   	fcall	_strcpy
  1231  00D1                     l1181:	
  1232                           
  1233                           ;LCD_Display_Program.c: 141: if(num2==0) strcpy(moji2,"0");
  1234  00D1  0020               	movlb	0	; select bank0
  1235  00D2  0848               	movf	_num2,w
  1236  00D3  0449               	iorwf	_num2+1,w
  1237  00D4  1D03               	btfss	3,2
  1238  00D5  28DE               	goto	l1185
  1239  00D6  307B               	movlw	low (STR_2| (0+32768))
  1240  00D7  00F3               	movwf	strcpy@from
  1241  00D8  3084               	movlw	high (STR_2| (0+32768))
  1242  00D9  00F4               	movwf	strcpy@from+1
  1243  00DA  302B               	movlw	(low (_moji2| 0))& (0+255)
  1244  00DB  3183  23F7  3180   	fcall	_strcpy
  1245  00DE                     l1185:	
  1246                           
  1247                           ;LCD_Display_Program.c: 142: if(num2==1) strcpy(moji2,"1");
  1248  00DE  0020               	movlb	0	; select bank0
  1249  00DF  0348               	decf	_num2,w
  1250  00E0  0449               	iorwf	_num2+1,w
  1251  00E1  1D03               	btfss	3,2
  1252  00E2  28EB               	goto	l1189
  1253  00E3  307D               	movlw	low (STR_3| (0+32768))
  1254  00E4  00F3               	movwf	strcpy@from
  1255  00E5  3084               	movlw	high (STR_3| (0+32768))
  1256  00E6  00F4               	movwf	strcpy@from+1
  1257  00E7  302B               	movlw	(low (_moji2| 0))& (0+255)
  1258  00E8  3183  23F7  3180   	fcall	_strcpy
  1259  00EB                     l1189:	
  1260                           
  1261                           ;LCD_Display_Program.c: 143: if(num2==2) strcpy(moji2,"2");
  1262  00EB  3002               	movlw	2
  1263  00EC  0020               	movlb	0	; select bank0
  1264  00ED  0648               	xorwf	_num2,w
  1265  00EE  0449               	iorwf	_num2+1,w
  1266  00EF  1D03               	btfss	3,2
  1267  00F0  28F9               	goto	l1193
  1268  00F1  307F               	movlw	low (STR_4| (0+32768))
  1269  00F2  00F3               	movwf	strcpy@from
  1270  00F3  3084               	movlw	high (STR_4| (0+32768))
  1271  00F4  00F4               	movwf	strcpy@from+1
  1272  00F5  302B               	movlw	(low (_moji2| 0))& (0+255)
  1273  00F6  3183  23F7  3180   	fcall	_strcpy
  1274  00F9                     l1193:	
  1275                           
  1276                           ;LCD_Display_Program.c: 144: if(num2==3) strcpy(moji2,"3");
  1277  00F9  3003               	movlw	3
  1278  00FA  0020               	movlb	0	; select bank0
  1279  00FB  0648               	xorwf	_num2,w
  1280  00FC  0449               	iorwf	_num2+1,w
  1281  00FD  1D03               	btfss	3,2
  1282  00FE  2907               	goto	l1197
  1283  00FF  3081               	movlw	low (STR_5| (0+32768))
  1284  0100  00F3               	movwf	strcpy@from
  1285  0101  3084               	movlw	high (STR_5| (0+32768))
  1286  0102  00F4               	movwf	strcpy@from+1
  1287  0103  302B               	movlw	(low (_moji2| 0))& (0+255)
  1288  0104  3183  23F7  3180   	fcall	_strcpy
  1289  0107                     l1197:	
  1290                           
  1291                           ;LCD_Display_Program.c: 145: if(num2==4) strcpy(moji2,"4");
  1292  0107  3004               	movlw	4
  1293  0108  0020               	movlb	0	; select bank0
  1294  0109  0648               	xorwf	_num2,w
  1295  010A  0449               	iorwf	_num2+1,w
  1296  010B  1D03               	btfss	3,2
  1297  010C  2915               	goto	l1201
  1298  010D  3083               	movlw	low (STR_6| (0+32768))
  1299  010E  00F3               	movwf	strcpy@from
  1300  010F  3084               	movlw	high (STR_6| (0+32768))
  1301  0110  00F4               	movwf	strcpy@from+1
  1302  0111  302B               	movlw	(low (_moji2| 0))& (0+255)
  1303  0112  3183  23F7  3180   	fcall	_strcpy
  1304  0115                     l1201:	
  1305                           
  1306                           ;LCD_Display_Program.c: 146: if(num2==5) strcpy(moji2,"5");
  1307  0115  3005               	movlw	5
  1308  0116  0020               	movlb	0	; select bank0
  1309  0117  0648               	xorwf	_num2,w
  1310  0118  0449               	iorwf	_num2+1,w
  1311  0119  1D03               	btfss	3,2
  1312  011A  2923               	goto	l1205
  1313  011B  3085               	movlw	low (STR_7| (0+32768))
  1314  011C  00F3               	movwf	strcpy@from
  1315  011D  3084               	movlw	high (STR_7| (0+32768))
  1316  011E  00F4               	movwf	strcpy@from+1
  1317  011F  302B               	movlw	(low (_moji2| 0))& (0+255)
  1318  0120  3183  23F7  3180   	fcall	_strcpy
  1319  0123                     l1205:	
  1320                           
  1321                           ;LCD_Display_Program.c: 147: if(num2==6) strcpy(moji2,"6");
  1322  0123  3006               	movlw	6
  1323  0124  0020               	movlb	0	; select bank0
  1324  0125  0648               	xorwf	_num2,w
  1325  0126  0449               	iorwf	_num2+1,w
  1326  0127  1D03               	btfss	3,2
  1327  0128  2931               	goto	l1209
  1328  0129  3087               	movlw	low (STR_8| (0+32768))
  1329  012A  00F3               	movwf	strcpy@from
  1330  012B  3084               	movlw	high (STR_8| (0+32768))
  1331  012C  00F4               	movwf	strcpy@from+1
  1332  012D  302B               	movlw	(low (_moji2| 0))& (0+255)
  1333  012E  3183  23F7  3180   	fcall	_strcpy
  1334  0131                     l1209:	
  1335                           
  1336                           ;LCD_Display_Program.c: 148: if(num2==7) strcpy(moji2,"7");
  1337  0131  3007               	movlw	7
  1338  0132  0020               	movlb	0	; select bank0
  1339  0133  0648               	xorwf	_num2,w
  1340  0134  0449               	iorwf	_num2+1,w
  1341  0135  1D03               	btfss	3,2
  1342  0136  293F               	goto	l1213
  1343  0137  3089               	movlw	low (STR_9| (0+32768))
  1344  0138  00F3               	movwf	strcpy@from
  1345  0139  3084               	movlw	high (STR_9| (0+32768))
  1346  013A  00F4               	movwf	strcpy@from+1
  1347  013B  302B               	movlw	(low (_moji2| 0))& (0+255)
  1348  013C  3183  23F7  3180   	fcall	_strcpy
  1349  013F                     l1213:	
  1350                           
  1351                           ;LCD_Display_Program.c: 149: if(num2==8) strcpy(moji2,"8");
  1352  013F  3008               	movlw	8
  1353  0140  0020               	movlb	0	; select bank0
  1354  0141  0648               	xorwf	_num2,w
  1355  0142  0449               	iorwf	_num2+1,w
  1356  0143  1D03               	btfss	3,2
  1357  0144  294D               	goto	l1217
  1358  0145  308B               	movlw	low (STR_10| (0+32768))
  1359  0146  00F3               	movwf	strcpy@from
  1360  0147  3084               	movlw	high (STR_10| (0+32768))
  1361  0148  00F4               	movwf	strcpy@from+1
  1362  0149  302B               	movlw	(low (_moji2| 0))& (0+255)
  1363  014A  3183  23F7  3180   	fcall	_strcpy
  1364  014D                     l1217:	
  1365                           
  1366                           ;LCD_Display_Program.c: 150: if(num2==9) strcpy(moji2,"9");
  1367  014D  3009               	movlw	9
  1368  014E  0020               	movlb	0	; select bank0
  1369  014F  0648               	xorwf	_num2,w
  1370  0150  0449               	iorwf	_num2+1,w
  1371  0151  1D03               	btfss	3,2
  1372  0152  295B               	goto	l1221
  1373  0153  308D               	movlw	low (STR_11| (0+32768))
  1374  0154  00F3               	movwf	strcpy@from
  1375  0155  3084               	movlw	high (STR_11| (0+32768))
  1376  0156  00F4               	movwf	strcpy@from+1
  1377  0157  302B               	movlw	(low (_moji2| 0))& (0+255)
  1378  0158  3183  23F7  3180   	fcall	_strcpy
  1379  015B                     l1221:	
  1380                           
  1381                           ;LCD_Display_Program.c: 151: if(num3==0) strcpy(moji3,"0");
  1382  015B  0020               	movlb	0	; select bank0
  1383  015C  0846               	movf	_num3,w
  1384  015D  0447               	iorwf	_num3+1,w
  1385  015E  1D03               	btfss	3,2
  1386  015F  2968               	goto	l1225
  1387  0160  307B               	movlw	low (STR_2| (0+32768))
  1388  0161  00F3               	movwf	strcpy@from
  1389  0162  3084               	movlw	high (STR_2| (0+32768))
  1390  0163  00F4               	movwf	strcpy@from+1
  1391  0164  3026               	movlw	(low (_moji3| 0))& (0+255)
  1392  0165  3183  23F7  3180   	fcall	_strcpy
  1393  0168                     l1225:	
  1394                           
  1395                           ;LCD_Display_Program.c: 152: if(num3==1) strcpy(moji3,"1");
  1396  0168  0020               	movlb	0	; select bank0
  1397  0169  0346               	decf	_num3,w
  1398  016A  0447               	iorwf	_num3+1,w
  1399  016B  1D03               	btfss	3,2
  1400  016C  2975               	goto	l1229
  1401  016D  307D               	movlw	low (STR_3| (0+32768))
  1402  016E  00F3               	movwf	strcpy@from
  1403  016F  3084               	movlw	high (STR_3| (0+32768))
  1404  0170  00F4               	movwf	strcpy@from+1
  1405  0171  3026               	movlw	(low (_moji3| 0))& (0+255)
  1406  0172  3183  23F7  3180   	fcall	_strcpy
  1407  0175                     l1229:	
  1408                           
  1409                           ;LCD_Display_Program.c: 153: if(num3==2) strcpy(moji3,"2");
  1410  0175  3002               	movlw	2
  1411  0176  0020               	movlb	0	; select bank0
  1412  0177  0646               	xorwf	_num3,w
  1413  0178  0447               	iorwf	_num3+1,w
  1414  0179  1D03               	btfss	3,2
  1415  017A  2983               	goto	l1233
  1416  017B  307F               	movlw	low (STR_4| (0+32768))
  1417  017C  00F3               	movwf	strcpy@from
  1418  017D  3084               	movlw	high (STR_4| (0+32768))
  1419  017E  00F4               	movwf	strcpy@from+1
  1420  017F  3026               	movlw	(low (_moji3| 0))& (0+255)
  1421  0180  3183  23F7  3180   	fcall	_strcpy
  1422  0183                     l1233:	
  1423                           
  1424                           ;LCD_Display_Program.c: 154: if(num3==3) strcpy(moji3,"3");
  1425  0183  3003               	movlw	3
  1426  0184  0020               	movlb	0	; select bank0
  1427  0185  0646               	xorwf	_num3,w
  1428  0186  0447               	iorwf	_num3+1,w
  1429  0187  1D03               	btfss	3,2
  1430  0188  2991               	goto	l1237
  1431  0189  3081               	movlw	low (STR_5| (0+32768))
  1432  018A  00F3               	movwf	strcpy@from
  1433  018B  3084               	movlw	high (STR_5| (0+32768))
  1434  018C  00F4               	movwf	strcpy@from+1
  1435  018D  3026               	movlw	(low (_moji3| 0))& (0+255)
  1436  018E  3183  23F7  3180   	fcall	_strcpy
  1437  0191                     l1237:	
  1438                           
  1439                           ;LCD_Display_Program.c: 155: if(num3==4) strcpy(moji3,"4");
  1440  0191  3004               	movlw	4
  1441  0192  0020               	movlb	0	; select bank0
  1442  0193  0646               	xorwf	_num3,w
  1443  0194  0447               	iorwf	_num3+1,w
  1444  0195  1D03               	btfss	3,2
  1445  0196  299F               	goto	l1241
  1446  0197  3083               	movlw	low (STR_6| (0+32768))
  1447  0198  00F3               	movwf	strcpy@from
  1448  0199  3084               	movlw	high (STR_6| (0+32768))
  1449  019A  00F4               	movwf	strcpy@from+1
  1450  019B  3026               	movlw	(low (_moji3| 0))& (0+255)
  1451  019C  3183  23F7  3180   	fcall	_strcpy
  1452  019F                     l1241:	
  1453                           
  1454                           ;LCD_Display_Program.c: 156: if(num3==5) strcpy(moji3,"5");
  1455  019F  3005               	movlw	5
  1456  01A0  0020               	movlb	0	; select bank0
  1457  01A1  0646               	xorwf	_num3,w
  1458  01A2  0447               	iorwf	_num3+1,w
  1459  01A3  1D03               	btfss	3,2
  1460  01A4  29AD               	goto	l1245
  1461  01A5  3085               	movlw	low (STR_7| (0+32768))
  1462  01A6  00F3               	movwf	strcpy@from
  1463  01A7  3084               	movlw	high (STR_7| (0+32768))
  1464  01A8  00F4               	movwf	strcpy@from+1
  1465  01A9  3026               	movlw	(low (_moji3| 0))& (0+255)
  1466  01AA  3183  23F7  3180   	fcall	_strcpy
  1467  01AD                     l1245:	
  1468                           
  1469                           ;LCD_Display_Program.c: 157: if(num3==6) strcpy(moji3,"6");
  1470  01AD  3006               	movlw	6
  1471  01AE  0020               	movlb	0	; select bank0
  1472  01AF  0646               	xorwf	_num3,w
  1473  01B0  0447               	iorwf	_num3+1,w
  1474  01B1  1D03               	btfss	3,2
  1475  01B2  29BB               	goto	l1249
  1476  01B3  3087               	movlw	low (STR_8| (0+32768))
  1477  01B4  00F3               	movwf	strcpy@from
  1478  01B5  3084               	movlw	high (STR_8| (0+32768))
  1479  01B6  00F4               	movwf	strcpy@from+1
  1480  01B7  3026               	movlw	(low (_moji3| 0))& (0+255)
  1481  01B8  3183  23F7  3180   	fcall	_strcpy
  1482  01BB                     l1249:	
  1483                           
  1484                           ;LCD_Display_Program.c: 158: if(num3==7) strcpy(moji3,"7");
  1485  01BB  3007               	movlw	7
  1486  01BC  0020               	movlb	0	; select bank0
  1487  01BD  0646               	xorwf	_num3,w
  1488  01BE  0447               	iorwf	_num3+1,w
  1489  01BF  1D03               	btfss	3,2
  1490  01C0  29C9               	goto	l1253
  1491  01C1  3089               	movlw	low (STR_9| (0+32768))
  1492  01C2  00F3               	movwf	strcpy@from
  1493  01C3  3084               	movlw	high (STR_9| (0+32768))
  1494  01C4  00F4               	movwf	strcpy@from+1
  1495  01C5  3026               	movlw	(low (_moji3| 0))& (0+255)
  1496  01C6  3183  23F7  3180   	fcall	_strcpy
  1497  01C9                     l1253:	
  1498                           
  1499                           ;LCD_Display_Program.c: 159: if(num3==8) strcpy(moji3,"8");
  1500  01C9  3008               	movlw	8
  1501  01CA  0020               	movlb	0	; select bank0
  1502  01CB  0646               	xorwf	_num3,w
  1503  01CC  0447               	iorwf	_num3+1,w
  1504  01CD  1D03               	btfss	3,2
  1505  01CE  29D7               	goto	l1257
  1506  01CF  308B               	movlw	low (STR_10| (0+32768))
  1507  01D0  00F3               	movwf	strcpy@from
  1508  01D1  3084               	movlw	high (STR_10| (0+32768))
  1509  01D2  00F4               	movwf	strcpy@from+1
  1510  01D3  3026               	movlw	(low (_moji3| 0))& (0+255)
  1511  01D4  3183  23F7  3180   	fcall	_strcpy
  1512  01D7                     l1257:	
  1513                           
  1514                           ;LCD_Display_Program.c: 160: if(num3==9) strcpy(moji3,"9");
  1515  01D7  3009               	movlw	9
  1516  01D8  0020               	movlb	0	; select bank0
  1517  01D9  0646               	xorwf	_num3,w
  1518  01DA  0447               	iorwf	_num3+1,w
  1519  01DB  1D03               	btfss	3,2
  1520  01DC  29E5               	goto	l140
  1521  01DD  308D               	movlw	low (STR_11| (0+32768))
  1522  01DE  00F3               	movwf	strcpy@from
  1523  01DF  3084               	movlw	high (STR_11| (0+32768))
  1524  01E0  00F4               	movwf	strcpy@from+1
  1525  01E1  3026               	movlw	(low (_moji3| 0))& (0+255)
  1526  01E2  3183  23F7  3180   	fcall	_strcpy
  1527  01E5                     l140:	
  1528                           
  1529                           ;LCD_Display_Program.c: 168: strcat(moji1,moji2);
  1530  01E5  302B               	movlw	low _moji2
  1531  01E6  00F3               	movwf	strcat@from
  1532  01E7  3000               	movlw	high _moji2
  1533  01E8  00F4               	movwf	strcat@from+1
  1534  01E9  3030               	movlw	(low (_moji1| 0))& (0+255)
  1535  01EA  3183  23AE  3180   	fcall	_strcat
  1536                           
  1537                           ;LCD_Display_Program.c: 169: strcat(moji1,".");
  1538  01ED  3079               	movlw	low (STR_32| (0+32768))
  1539  01EE  00F3               	movwf	strcat@from
  1540  01EF  3084               	movlw	high (STR_32| (0+32768))
  1541  01F0  00F4               	movwf	strcat@from+1
  1542  01F1  3030               	movlw	(low (_moji1| 0))& (0+255)
  1543  01F2  3183  23AE  3180   	fcall	_strcat
  1544                           
  1545                           ;LCD_Display_Program.c: 170: strcat(moji1,moji3);
  1546  01F5  3026               	movlw	low _moji3
  1547  01F6  00F3               	movwf	strcat@from
  1548  01F7  3000               	movlw	high _moji3
  1549  01F8  00F4               	movwf	strcat@from+1
  1550  01F9  3030               	movlw	(low (_moji1| 0))& (0+255)
  1551  01FA  3183  23AE         	fcall	_strcat
  1552  01FC  0008               	return
  1553  01FD                     __end_of_read:	
  1554                           
  1555                           	psect	text2
  1556  03F7                     __ptext2:	
  1557 ;; *************** function _strcpy *****************
  1558 ;; Defined at:
  1559 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\strcpy.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;  to              1    wreg     PTR unsigned char 
  1562 ;;		 -> moji3(5), moji2(5), moji1(5), 
  1563 ;;  from            2    3[COMMON] PTR const unsigned char 
  1564 ;;		 -> STR_31(2), STR_30(2), STR_29(2), STR_28(2), 
  1565 ;;		 -> STR_27(2), STR_26(2), STR_25(2), STR_24(2), 
  1566 ;;		 -> STR_23(2), STR_22(2), STR_21(2), STR_20(2), 
  1567 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
  1568 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
  1569 ;;		 -> STR_11(2), STR_10(2), STR_9(2), STR_8(2), 
  1570 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  1571 ;;		 -> STR_3(2), STR_2(2), 
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;  to              1    7[COMMON] PTR unsigned char 
  1574 ;;		 -> moji3(5), moji2(5), moji1(5), 
  1575 ;;  cp              1    6[COMMON] PTR unsigned char 
  1576 ;;		 -> moji3(5), moji2(5), moji1(5), 
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      PTR unsigned char 
  1579 ;; Registers used:
  1580 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1586 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1587 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1588 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1589 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1590 ;;Total ram usage:        5 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; Hardware stack levels required when called:    1
  1593 ;; This function calls:
  1594 ;;		Nothing
  1595 ;; This function is called by:
  1596 ;;		_read
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600                           
  1601                           ;psect for function _strcpy
  1602  03F7                     _strcpy:	
  1603                           
  1604                           ;incstack = 0
  1605                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  1606                           ;strcpy@to stored from wreg
  1607  03F7  00F7               	movwf	strcpy@to
  1608  03F8  0877               	movf	strcpy@to,w
  1609  03F9  00F5               	movwf	??_strcpy
  1610  03FA  0875               	movf	??_strcpy,w
  1611  03FB  00F6               	movwf	strcpy@cp
  1612  03FC                     l1059:	
  1613  03FC  0876               	movf	strcpy@cp,w
  1614  03FD  0086               	movwf	6
  1615  03FE  0187               	clrf	7
  1616  03FF  0873               	movf	strcpy@from,w
  1617  0400  0084               	movwf	4
  1618  0401  0874               	movf	strcpy@from+1,w
  1619  0402  0085               	movwf	5
  1620  0403  0800               	movf	0,w	;code access
  1621  0404  3FC0               	movwi [0]fsr1
  1622  0405  0889               	movf	9,f
  1623  0406  1903               	btfsc	3,2
  1624  0407  0008               	return
  1625  0408  3001               	movlw	1
  1626  0409  00F5               	movwf	??_strcpy
  1627  040A  0875               	movf	??_strcpy,w
  1628  040B  07F6               	addwf	strcpy@cp,f
  1629  040C  3001               	movlw	1
  1630  040D  07F3               	addwf	strcpy@from,f
  1631  040E  3000               	movlw	0
  1632  040F  3DF4               	addwfc	strcpy@from+1,f
  1633  0410  2BFC               	goto	l1059
  1634  0411                     __end_of_strcpy:	
  1635                           ;	Return value of _strcpy is never used
  1636                           
  1637                           
  1638                           	psect	text3
  1639  03AE                     __ptext3:	
  1640 ;; *************** function _strcat *****************
  1641 ;; Defined at:
  1642 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\strcat.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;  to              1    wreg     PTR unsigned char 
  1645 ;;		 -> moji1(5), 
  1646 ;;  from            2    3[COMMON] PTR const unsigned char 
  1647 ;;		 -> STR_32(2), moji3(5), moji2(5), 
  1648 ;; Auto vars:     Size  Location     Type
  1649 ;;  to              1    7[COMMON] PTR unsigned char 
  1650 ;;		 -> moji1(5), 
  1651 ;;  cp              1    6[COMMON] PTR unsigned char 
  1652 ;;		 -> moji1(5), 
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  1    wreg      PTR unsigned char 
  1655 ;; Registers used:
  1656 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1662 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1663 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1664 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1665 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1666 ;;Total ram usage:        5 bytes
  1667 ;; Hardware stack levels used:    1
  1668 ;; Hardware stack levels required when called:    1
  1669 ;; This function calls:
  1670 ;;		Nothing
  1671 ;; This function is called by:
  1672 ;;		_read
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           
  1677                           ;psect for function _strcat
  1678  03AE                     _strcat:	
  1679                           
  1680                           ;incstack = 0
  1681                           ; Regs used in _strcat: [wreg-fsr1h+status,2+status,0+pclath]
  1682                           ;strcat@to stored from wreg
  1683  03AE  00F7               	movwf	strcat@to
  1684  03AF  0877               	movf	strcat@to,w
  1685  03B0  00F5               	movwf	??_strcat
  1686  03B1  0875               	movf	??_strcat,w
  1687  03B2  00F6               	movwf	strcat@cp
  1688  03B3                     l1065:	
  1689  03B3  0876               	movf	strcat@cp,w
  1690  03B4  0086               	movwf	6
  1691  03B5  0187               	clrf	7
  1692  03B6  0801               	movf	1,w
  1693  03B7  1903               	btfsc	3,2
  1694  03B8  2BC6               	goto	l1071
  1695  03B9  3001               	movlw	1
  1696  03BA  00F5               	movwf	??_strcat
  1697  03BB  0875               	movf	??_strcat,w
  1698  03BC  07F6               	addwf	strcat@cp,f
  1699  03BD  2BB3               	goto	l1065
  1700  03BE                     l1067:	
  1701  03BE  3001               	movlw	1
  1702  03BF  00F5               	movwf	??_strcat
  1703  03C0  0875               	movf	??_strcat,w
  1704  03C1  07F6               	addwf	strcat@cp,f
  1705  03C2  3001               	movlw	1
  1706  03C3  07F3               	addwf	strcat@from,f
  1707  03C4  3000               	movlw	0
  1708  03C5  3DF4               	addwfc	strcat@from+1,f
  1709  03C6                     l1071:	
  1710  03C6  0876               	movf	strcat@cp,w
  1711  03C7  0086               	movwf	6
  1712  03C8  0187               	clrf	7
  1713  03C9  0873               	movf	strcat@from,w
  1714  03CA  0084               	movwf	4
  1715  03CB  0874               	movf	strcat@from+1,w
  1716  03CC  0085               	movwf	5
  1717  03CD  0800               	movf	0,w	;code access
  1718  03CE  3FC0               	movwi [0]fsr1
  1719  03CF  0889               	movf	9,f
  1720  03D0  1903               	btfsc	3,2
  1721  03D1  0008               	return
  1722  03D2  2BBE               	goto	l1067
  1723  03D3                     __end_of_strcat:	
  1724                           ;	Return value of _strcat is never used
  1725                           
  1726                           
  1727                           	psect	text4
  1728  03D3                     __ptext4:	
  1729 ;; *************** function _lcdSetCursor *****************
  1730 ;; Defined at:
  1731 ;;		line 73 in file "LCD_Display_Sub.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;  lcd             1    wreg     PTR struct _Lcd
  1734 ;;		 -> main@lcd(10), 
  1735 ;;  col             1    7[COMMON] unsigned char 
  1736 ;;  line            1    8[COMMON] unsigned char 
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;  lcd             1    1[BANK0 ] PTR struct _Lcd
  1739 ;;		 -> main@lcd(10), 
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  1    wreg      void 
  1742 ;; Registers used:
  1743 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1749 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1750 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1751 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1752 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1753 ;;Total ram usage:        4 bytes
  1754 ;; Hardware stack levels used:    1
  1755 ;; Hardware stack levels required when called:    4
  1756 ;; This function calls:
  1757 ;;		_lcdCommand
  1758 ;; This function is called by:
  1759 ;;		_main
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763                           
  1764                           ;psect for function _lcdSetCursor
  1765  03D3                     _lcdSetCursor:	
  1766                           
  1767                           ;incstack = 0
  1768                           ; Regs used in _lcdSetCursor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1769                           ;lcdSetCursor@lcd stored from wreg
  1770  03D3  0020               	movlb	0	; select bank0
  1771  03D4  00B6               	movwf	lcdSetCursor@lcd
  1772                           
  1773                           ;LCD_Display_Sub.c: 74: if(line > 4){
  1774  03D5  3005               	movlw	5
  1775  03D6  0278               	subwf	lcdSetCursor@line,w
  1776  03D7  1C03               	skipc
  1777  03D8  2BDD               	goto	l1463
  1778                           
  1779                           ;LCD_Display_Sub.c: 75: line = 4;
  1780  03D9  3004               	movlw	4
  1781  03DA  00B5               	movwf	??_lcdSetCursor
  1782  03DB  0835               	movf	??_lcdSetCursor,w
  1783  03DC  00F8               	movwf	lcdSetCursor@line
  1784  03DD                     l1463:	
  1785                           
  1786                           ;LCD_Display_Sub.c: 76: }
  1787                           ;LCD_Display_Sub.c: 77: if(line > lcd->NumLines){
  1788  03DD  0836               	movf	lcdSetCursor@lcd,w
  1789  03DE  3E04               	addlw	4
  1790  03DF  0086               	movwf	6
  1791  03E0  0187               	clrf	7
  1792  03E1  0878               	movf	lcdSetCursor@line,w
  1793  03E2  0201               	subwf	1,w
  1794  03E3  1803               	skipnc
  1795  03E4  2BEA               	goto	l1467
  1796                           
  1797                           ;LCD_Display_Sub.c: 78: line = lcd->NumLines;
  1798  03E5  0836               	movf	lcdSetCursor@lcd,w
  1799  03E6  0086               	movwf	6
  1800  03E7  0187               	clrf	7
  1801  03E8  3F44               	moviw [4]fsr1
  1802  03E9  00F8               	movwf	lcdSetCursor@line
  1803  03EA                     l1467:	
  1804                           
  1805                           ;LCD_Display_Sub.c: 79: }
  1806                           ;LCD_Display_Sub.c: 81: lcdCommand(0x80 | (col + lcd->RowOffsets[line]));
  1807  03EA  0878               	movf	lcdSetCursor@line,w
  1808  03EB  3E06               	addlw	6
  1809  03EC  0736               	addwf	lcdSetCursor@lcd,w
  1810  03ED  00B5               	movwf	??_lcdSetCursor
  1811  03EE  0835               	movf	??_lcdSetCursor,w
  1812  03EF  0086               	movwf	6
  1813  03F0  0187               	clrf	7
  1814  03F1  0801               	movf	1,w
  1815  03F2  0777               	addwf	lcdSetCursor@col,w
  1816  03F3  3880               	iorlw	128
  1817  03F4  3184  246E         	fcall	_lcdCommand
  1818  03F6  0008               	return
  1819  03F7                     __end_of_lcdSetCursor:	
  1820                           
  1821                           	psect	text5
  1822  0426                     __ptext5:	
  1823 ;; *************** function _lcdPrint *****************
  1824 ;; Defined at:
  1825 ;;		line 93 in file "LCD_Display_Sub.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;  str             2    7[COMMON] PTR unsigned char 
  1828 ;;		 -> STR_1(5), moji1(5), 
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;		None
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  1    wreg      void 
  1833 ;; Registers used:
  1834 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1840 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1842 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1843 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1844 ;;Total ram usage:        3 bytes
  1845 ;; Hardware stack levels used:    1
  1846 ;; Hardware stack levels required when called:    4
  1847 ;; This function calls:
  1848 ;;		_lcdWrite
  1849 ;; This function is called by:
  1850 ;;		_main
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           
  1855                           ;psect for function _lcdPrint
  1856  0426                     _lcdPrint:	
  1857  0426                     l1475:	
  1858                           ;LCD_Display_Sub.c: 94: for(; *str != '\0'; str++){
  1859                           
  1860                           ;incstack = 0
  1861                           ; Regs used in _lcdPrint: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1862                           
  1863  0426  0877               	movf	lcdPrint@str,w
  1864  0427  0084               	movwf	4
  1865  0428  0878               	movf	lcdPrint@str+1,w
  1866  0429  0085               	movwf	5
  1867  042A  0012               	moviw fsr0++
  1868  042B  1903               	btfsc	3,2
  1869  042C  0008               	return
  1870                           
  1871                           ;LCD_Display_Sub.c: 95: lcdWrite(*str);
  1872  042D  0877               	movf	lcdPrint@str,w
  1873  042E  0084               	movwf	4
  1874  042F  0878               	movf	lcdPrint@str+1,w
  1875  0430  0085               	movwf	5
  1876  0431  0800               	movf	0,w	;code access
  1877  0432  3184  2461  3184   	fcall	_lcdWrite
  1878  0435  3001               	movlw	1
  1879  0436  07F7               	addwf	lcdPrint@str,f
  1880  0437  3000               	movlw	0
  1881  0438  3DF8               	addwfc	lcdPrint@str+1,f
  1882  0439  2C26               	goto	l1475
  1883  043A                     __end_of_lcdPrint:	
  1884                           
  1885                           	psect	text6
  1886  0461                     __ptext6:	
  1887 ;; *************** function _lcdWrite *****************
  1888 ;; Defined at:
  1889 ;;		line 103 in file "LCD_Display_Sub.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;  val             1    wreg     unsigned char 
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;  val             1    6[COMMON] unsigned char 
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  1    wreg      void 
  1896 ;; Registers used:
  1897 ;;		wreg, status,2, status,0, pclath, cstack
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1904 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1906 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1907 ;;Total ram usage:        1 bytes
  1908 ;; Hardware stack levels used:    1
  1909 ;; Hardware stack levels required when called:    3
  1910 ;; This function calls:
  1911 ;;		_lcdSend
  1912 ;; This function is called by:
  1913 ;;		_lcdPrint
  1914 ;;		_lcdCreateChar
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           
  1919                           ;psect for function _lcdWrite
  1920  0461                     _lcdWrite:	
  1921                           
  1922                           ;incstack = 0
  1923                           ; Regs used in _lcdWrite: [wreg+status,2+status,0+pclath+cstack]
  1924                           ;lcdWrite@val stored from wreg
  1925  0461  00F6               	movwf	lcdWrite@val
  1926                           
  1927                           ;LCD_Display_Sub.c: 104: lcdSend(val, 1);
  1928  0462  01F3               	clrf	lcdSend@mode
  1929  0463  0AF3               	incf	lcdSend@mode,f
  1930  0464  0876               	movf	lcdWrite@val,w
  1931  0465  3183  233E         	fcall	_lcdSend
  1932  0467  0008               	return
  1933  0468                     __end_of_lcdWrite:	
  1934                           
  1935                           	psect	text7
  1936  043A                     __ptext7:	
  1937 ;; *************** function _lcdClear *****************
  1938 ;; Defined at:
  1939 ;;		line 63 in file "LCD_Display_Sub.c"
  1940 ;; Parameters:    Size  Location     Type
  1941 ;;		None
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;		None
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  1    wreg      void 
  1946 ;; Registers used:
  1947 ;;		wreg, status,2, status,0, pclath, cstack
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1955 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1956 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1957 ;;Total ram usage:        1 bytes
  1958 ;; Hardware stack levels used:    1
  1959 ;; Hardware stack levels required when called:    4
  1960 ;; This function calls:
  1961 ;;		_lcdCommand
  1962 ;; This function is called by:
  1963 ;;		_main
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           
  1968                           ;psect for function _lcdClear
  1969  043A                     _lcdClear:	
  1970                           
  1971                           ;LCD_Display_Sub.c: 64: lcdCommand(0x01);
  1972                           
  1973                           ;incstack = 0
  1974                           ; Regs used in _lcdClear: [wreg+status,2+status,0+pclath+cstack]
  1975  043A  3001               	movlw	1
  1976  043B  3184  246E  3184   	fcall	_lcdCommand
  1977                           
  1978                           ;LCD_Display_Sub.c: 65: _delay((unsigned long)((2000)*(8000000/4000000.0)));
  1979  043E  3006               	movlw	6
  1980  043F  00F7               	movwf	??_lcdClear
  1981  0440  3030               	movlw	48
  1982  0441                     u1947:	
  1983  0441  0B89               	decfsz	9,f
  1984  0442  2C41               	goto	u1947
  1985  0443  0BF7               	decfsz	??_lcdClear,f
  1986  0444  2C41               	goto	u1947
  1987  0445  3200               	nop2
  1988  0446  0008               	return
  1989  0447                     __end_of_lcdClear:	
  1990                           
  1991                           	psect	text8
  1992  01FD                     __ptext8:	
  1993 ;; *************** function _lcdBegin *****************
  1994 ;; Defined at:
  1995 ;;		line 13 in file "LCD_Display_Sub.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;  lcd             1    wreg     PTR struct _Lcd
  1998 ;;		 -> main@lcd(10), 
  1999 ;;  cols            1    0[BANK0 ] unsigned char 
  2000 ;;  lines           1    1[BANK0 ] unsigned char 
  2001 ;;  charsize        1    2[BANK0 ] unsigned char 
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;  lcd             1    8[COMMON] PTR struct _Lcd
  2004 ;;		 -> main@lcd(10), 
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  1    wreg      void 
  2007 ;; Registers used:
  2008 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2014 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2015 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2016 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2017 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2018 ;;Total ram usage:        5 bytes
  2019 ;; Hardware stack levels used:    1
  2020 ;; Hardware stack levels required when called:    4
  2021 ;; This function calls:
  2022 ;;		_lcdCommand
  2023 ;; This function is called by:
  2024 ;;		_main
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           
  2029                           ;psect for function _lcdBegin
  2030  01FD                     _lcdBegin:	
  2031                           
  2032                           ;incstack = 0
  2033                           ; Regs used in _lcdBegin: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2034                           ;lcdBegin@lcd stored from wreg
  2035  01FD  00F8               	movwf	lcdBegin@lcd
  2036                           
  2037                           ;LCD_Display_Sub.c: 15: lcd->DisplayFunction = 0x10;
  2038  01FE  3010               	movlw	16
  2039  01FF  00F7               	movwf	??_lcdBegin
  2040  0200  0878               	movf	lcdBegin@lcd,w
  2041  0201  0086               	movwf	6
  2042  0202  0187               	clrf	7
  2043  0203  0877               	movf	??_lcdBegin,w
  2044  0204  0081               	movwf	1
  2045                           
  2046                           ;LCD_Display_Sub.c: 16: }
  2047                           ;LCD_Display_Sub.c: 17: if(lines > 1){
  2048  0205  3002               	movlw	2
  2049  0206  0020               	movlb	0	; select bank0
  2050  0207  0236               	subwf	lcdBegin@lines,w
  2051  0208  1C03               	skipc
  2052  0209  2A0E               	goto	l1405
  2053                           
  2054                           ;LCD_Display_Sub.c: 18: lcd->DisplayFunction |= 0x08;
  2055  020A  0878               	movf	lcdBegin@lcd,w
  2056  020B  0086               	movwf	6
  2057  020C  0187               	clrf	7
  2058  020D  1581               	bsf	1,3
  2059  020E                     l1405:	
  2060                           
  2061                           ;LCD_Display_Sub.c: 19: }
  2062                           ;LCD_Display_Sub.c: 20: lcd->NumLines = lines;
  2063  020E  0836               	movf	lcdBegin@lines,w
  2064  020F  00F7               	movwf	??_lcdBegin
  2065  0210  0878               	movf	lcdBegin@lcd,w
  2066  0211  3E04               	addlw	4
  2067  0212  0086               	movwf	6
  2068  0213  0187               	clrf	7
  2069  0214  0877               	movf	??_lcdBegin,w
  2070  0215  0081               	movwf	1
  2071                           
  2072                           ;LCD_Display_Sub.c: 21: lcd->Cols = cols;
  2073  0216  0835               	movf	lcdBegin@cols,w
  2074  0217  00F7               	movwf	??_lcdBegin
  2075  0218  0878               	movf	lcdBegin@lcd,w
  2076  0219  3E05               	addlw	5
  2077  021A  0086               	movwf	6
  2078  021B  0187               	clrf	7
  2079  021C  0877               	movf	??_lcdBegin,w
  2080  021D  0081               	movwf	1
  2081                           
  2082                           ;LCD_Display_Sub.c: 22: if(charsize == 0x04){
  2083  021E  3004               	movlw	4
  2084  021F  0637               	xorwf	lcdBegin@charsize,w
  2085  0220  1D03               	btfss	3,2
  2086  0221  2A26               	goto	l1413
  2087                           
  2088                           ;LCD_Display_Sub.c: 23: lcd->DisplayFunction |= 0x04;
  2089  0222  0878               	movf	lcdBegin@lcd,w
  2090  0223  0086               	movwf	6
  2091  0224  0187               	clrf	7
  2092  0225  1501               	bsf	1,2
  2093  0226                     l1413:	
  2094                           
  2095                           ;LCD_Display_Sub.c: 24: }
  2096                           ;LCD_Display_Sub.c: 26: lcd->RowOffsets[0] = 0x00;
  2097  0226  0878               	movf	lcdBegin@lcd,w
  2098  0227  3E06               	addlw	6
  2099  0228  0086               	movwf	6
  2100  0229  0187               	clrf	7
  2101  022A  0181               	clrf	1
  2102                           
  2103                           ;LCD_Display_Sub.c: 27: lcd->RowOffsets[1] = 0x40;
  2104  022B  3040               	movlw	64
  2105  022C  00F7               	movwf	??_lcdBegin
  2106  022D  0878               	movf	lcdBegin@lcd,w
  2107  022E  3E07               	addlw	7
  2108  022F  0086               	movwf	6
  2109  0230  0187               	clrf	7
  2110  0231  0877               	movf	??_lcdBegin,w
  2111  0232  0081               	movwf	1
  2112                           
  2113                           ;LCD_Display_Sub.c: 28: lcd->RowOffsets[2] = 0x00 + cols;
  2114  0233  0835               	movf	lcdBegin@cols,w
  2115  0234  00F7               	movwf	??_lcdBegin
  2116  0235  0878               	movf	lcdBegin@lcd,w
  2117  0236  3E08               	addlw	8
  2118  0237  0086               	movwf	6
  2119  0238  0187               	clrf	7
  2120  0239  0877               	movf	??_lcdBegin,w
  2121  023A  0081               	movwf	1
  2122                           
  2123                           ;LCD_Display_Sub.c: 29: lcd->RowOffsets[3] = 0x40 + cols;
  2124  023B  0835               	movf	lcdBegin@cols,w
  2125  023C  3E40               	addlw	64
  2126  023D  00F7               	movwf	??_lcdBegin
  2127  023E  0878               	movf	lcdBegin@lcd,w
  2128  023F  3E09               	addlw	9
  2129  0240  0086               	movwf	6
  2130  0241  0187               	clrf	7
  2131  0242  0877               	movf	??_lcdBegin,w
  2132  0243  0081               	movwf	1
  2133                           
  2134                           ;LCD_Display_Sub.c: 32: _delay((unsigned long)((50)*(8000000/4000.0)));
  2135  0244  3082               	movlw	130
  2136  0245  00F7               	movwf	??_lcdBegin
  2137  0246  30DE               	movlw	222
  2138  0247                     u1957:	
  2139  0247  0B89               	decfsz	9,f
  2140  0248  2A47               	goto	u1957
  2141  0249  0BF7               	decfsz	??_lcdBegin,f
  2142  024A  2A47               	goto	u1957
  2143                           
  2144                           ;LCD_Display_Sub.c: 34: LATA0 = 0;
  2145  024B  0022               	movlb	2	; select bank2
  2146  024C  100C               	bcf	12,0	;volatile
  2147                           
  2148                           ;LCD_Display_Sub.c: 35: LATA2 = 0;
  2149  024D  110C               	bcf	12,2	;volatile
  2150                           
  2151                           ;LCD_Display_Sub.c: 36: LATA1 = 0;
  2152  024E  108C               	bcf	12,1	;volatile
  2153                           
  2154                           ;LCD_Display_Sub.c: 39: lcdCommand(0x20 | lcd->DisplayFunction);
  2155  024F  0878               	movf	lcdBegin@lcd,w
  2156  0250  0086               	movwf	6
  2157  0251  0187               	clrf	7
  2158  0252  0801               	movf	1,w
  2159  0253  3820               	iorlw	32
  2160  0254  3184  246E  3181   	fcall	_lcdCommand
  2161                           
  2162                           ;LCD_Display_Sub.c: 40: _delay((unsigned long)((4500)*(8000000/4000000.0)));
  2163  0257  300C               	movlw	12
  2164  0258  00F7               	movwf	??_lcdBegin
  2165  0259  30AF               	movlw	175
  2166  025A                     u1967:	
  2167  025A  0B89               	decfsz	9,f
  2168  025B  2A5A               	goto	u1967
  2169  025C  0BF7               	decfsz	??_lcdBegin,f
  2170  025D  2A5A               	goto	u1967
  2171  025E  0000               	nop
  2172                           
  2173                           ;LCD_Display_Sub.c: 42: lcdCommand(0x20 | lcd->DisplayFunction);
  2174  025F  0878               	movf	lcdBegin@lcd,w
  2175  0260  0086               	movwf	6
  2176  0261  0187               	clrf	7
  2177  0262  0801               	movf	1,w
  2178  0263  3820               	iorlw	32
  2179  0264  3184  246E  3181   	fcall	_lcdCommand
  2180                           
  2181                           ;LCD_Display_Sub.c: 43: _delay((unsigned long)((200)*(8000000/4000000.0)));
  2182  0267  3085               	movlw	133
  2183  0268                     u1977:	
  2184  0268  0B89               	decfsz	9,f
  2185  0269  2A68               	goto	u1977
  2186  026A  0000               	nop
  2187                           
  2188                           ;LCD_Display_Sub.c: 45: lcdCommand(0x20 | lcd->DisplayFunction);
  2189  026B  0878               	movf	lcdBegin@lcd,w
  2190  026C  0086               	movwf	6
  2191  026D  0187               	clrf	7
  2192  026E  0801               	movf	1,w
  2193  026F  3820               	iorlw	32
  2194  0270  3184  246E  3181   	fcall	_lcdCommand
  2195                           
  2196                           ;LCD_Display_Sub.c: 48: lcdCommand(0x20 | lcd->DisplayFunction);
  2197  0273  0878               	movf	lcdBegin@lcd,w
  2198  0274  0086               	movwf	6
  2199  0275  0187               	clrf	7
  2200  0276  0801               	movf	1,w
  2201  0277  3820               	iorlw	32
  2202  0278  3184  246E  3181   	fcall	_lcdCommand
  2203                           
  2204                           ;LCD_Display_Sub.c: 51: lcd->DisplayControl = 0x04 | 0x00 | 0x00;
  2205  027B  3004               	movlw	4
  2206  027C  00F7               	movwf	??_lcdBegin
  2207  027D  0A78               	incf	lcdBegin@lcd,w
  2208  027E  0086               	movwf	6
  2209  027F  0187               	clrf	7
  2210  0280  0877               	movf	??_lcdBegin,w
  2211  0281  0081               	movwf	1
  2212                           
  2213                           ;LCD_Display_Sub.c: 52: lcdCommand(0x08 | lcd->DisplayControl);
  2214  0282  0A78               	incf	lcdBegin@lcd,w
  2215  0283  0086               	movwf	6
  2216  0284  0187               	clrf	7
  2217  0285  0801               	movf	1,w
  2218  0286  3808               	iorlw	8
  2219  0287  3184  246E  3181   	fcall	_lcdCommand
  2220                           
  2221                           ;LCD_Display_Sub.c: 54: lcdCommand(0x01);
  2222  028A  3001               	movlw	1
  2223  028B  3184  246E  3181   	fcall	_lcdCommand
  2224                           
  2225                           ;LCD_Display_Sub.c: 55: _delay((unsigned long)((2000)*(8000000/4000000.0)));
  2226  028E  3006               	movlw	6
  2227  028F  00F7               	movwf	??_lcdBegin
  2228  0290  3030               	movlw	48
  2229  0291                     u1987:	
  2230  0291  0B89               	decfsz	9,f
  2231  0292  2A91               	goto	u1987
  2232  0293  0BF7               	decfsz	??_lcdBegin,f
  2233  0294  2A91               	goto	u1987
  2234  0295  3200               	nop2
  2235                           
  2236                           ;LCD_Display_Sub.c: 57: lcd->DisplayMode = 0x02 | 0x00;
  2237  0296  3002               	movlw	2
  2238  0297  00F7               	movwf	??_lcdBegin
  2239  0298  0878               	movf	lcdBegin@lcd,w
  2240  0299  3E02               	addlw	2
  2241  029A  0086               	movwf	6
  2242  029B  0187               	clrf	7
  2243  029C  0877               	movf	??_lcdBegin,w
  2244  029D  0081               	movwf	1
  2245                           
  2246                           ;LCD_Display_Sub.c: 58: lcdCommand(0x04 | lcd->DisplayMode);
  2247  029E  0878               	movf	lcdBegin@lcd,w
  2248  029F  3E02               	addlw	2
  2249  02A0  0086               	movwf	6
  2250  02A1  0187               	clrf	7
  2251  02A2  0801               	movf	1,w
  2252  02A3  3804               	iorlw	4
  2253  02A4  3184  246E         	fcall	_lcdCommand
  2254                           
  2255                           ;LCD_Display_Sub.c: 60: lcd->DisplayCursor = 0x00 | 0x04;
  2256  02A6  3004               	movlw	4
  2257  02A7  00F7               	movwf	??_lcdBegin
  2258  02A8  0878               	movf	lcdBegin@lcd,w
  2259  02A9  3E03               	addlw	3
  2260  02AA  0086               	movwf	6
  2261  02AB  0187               	clrf	7
  2262  02AC  0877               	movf	??_lcdBegin,w
  2263  02AD  0081               	movwf	1
  2264  02AE  0008               	return
  2265  02AF                     __end_of_lcdBegin:	
  2266                           
  2267                           	psect	text9
  2268  046E                     __ptext9:	
  2269 ;; *************** function _lcdCommand *****************
  2270 ;; Defined at:
  2271 ;;		line 99 in file "LCD_Display_Sub.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;  com             1    wreg     unsigned char 
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;  com             1    6[COMMON] unsigned char 
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  1    wreg      void 
  2278 ;; Registers used:
  2279 ;;		wreg, status,2, status,0, pclath, cstack
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2286 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2288 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2289 ;;Total ram usage:        1 bytes
  2290 ;; Hardware stack levels used:    1
  2291 ;; Hardware stack levels required when called:    3
  2292 ;; This function calls:
  2293 ;;		_lcdSend
  2294 ;; This function is called by:
  2295 ;;		_lcdBegin
  2296 ;;		_lcdClear
  2297 ;;		_lcdSetCursor
  2298 ;;		_lcdHome
  2299 ;;		_lcdCreateChar
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           
  2304                           ;psect for function _lcdCommand
  2305  046E                     _lcdCommand:	
  2306                           
  2307                           ;incstack = 0
  2308                           ; Regs used in _lcdCommand: [wreg+status,2+status,0+pclath+cstack]
  2309                           ;lcdCommand@com stored from wreg
  2310  046E  00F6               	movwf	lcdCommand@com
  2311                           
  2312                           ;LCD_Display_Sub.c: 100: lcdSend(com, 0);
  2313  046F  01F3               	clrf	lcdSend@mode
  2314  0470  0876               	movf	lcdCommand@com,w
  2315  0471  3183  233E         	fcall	_lcdSend
  2316  0473  0008               	return
  2317  0474                     __end_of_lcdCommand:	
  2318                           
  2319                           	psect	text10
  2320  033E                     __ptext10:	
  2321 ;; *************** function _lcdSend *****************
  2322 ;; Defined at:
  2323 ;;		line 107 in file "LCD_Display_Sub.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;  val             1    wreg     unsigned char 
  2326 ;;  mode            1    3[COMMON] unsigned char 
  2327 ;; Auto vars:     Size  Location     Type
  2328 ;;  val             1    5[COMMON] unsigned char 
  2329 ;; Return value:  Size  Location     Type
  2330 ;;                  1    wreg      void 
  2331 ;; Registers used:
  2332 ;;		wreg, status,2, status,0, pclath, cstack
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2338 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2339 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2340 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2341 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2342 ;;Total ram usage:        3 bytes
  2343 ;; Hardware stack levels used:    1
  2344 ;; Hardware stack levels required when called:    2
  2345 ;; This function calls:
  2346 ;;		_lcdPulseEnable
  2347 ;; This function is called by:
  2348 ;;		_lcdCommand
  2349 ;;		_lcdWrite
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353                           
  2354                           ;psect for function _lcdSend
  2355  033E                     _lcdSend:	
  2356                           
  2357                           ;incstack = 0
  2358                           ; Regs used in _lcdSend: [wreg+status,2+status,0+pclath+cstack]
  2359                           ;lcdSend@val stored from wreg
  2360  033E  00F5               	movwf	lcdSend@val
  2361                           
  2362                           ;LCD_Display_Sub.c: 108: LATA2 = 0;
  2363  033F  0022               	movlb	2	; select bank2
  2364  0340  110C               	bcf	12,2	;volatile
  2365                           
  2366                           ;LCD_Display_Sub.c: 109: LATA0 = mode;
  2367  0341  1C73               	btfss	lcdSend@mode,0
  2368  0342  2B46               	goto	u1530
  2369  0343  0022               	movlb	2	; select bank2
  2370  0344  140C               	bsf	12,0	;volatile
  2371  0345  2B48               	goto	u1544
  2372  0346                     u1530:	
  2373  0346  0022               	movlb	2	; select bank2
  2374  0347  100C               	bcf	12,0	;volatile
  2375  0348                     u1544:	
  2376                           
  2377                           ;LCD_Display_Sub.c: 110: LATA1 = 0;
  2378  0348  108C               	bcf	12,1	;volatile
  2379                           
  2380                           ;LCD_Display_Sub.c: 112: LATB7 = (val & 0x01);
  2381  0349  1C75               	btfss	lcdSend@val,0
  2382  034A  2B4E               	goto	u1550
  2383  034B  0022               	movlb	2	; select bank2
  2384  034C  178D               	bsf	13,7	;volatile
  2385  034D  2B50               	goto	l1379
  2386  034E                     u1550:	
  2387  034E  0022               	movlb	2	; select bank2
  2388  034F  138D               	bcf	13,7	;volatile
  2389  0350                     l1379:	
  2390                           
  2391                           ;LCD_Display_Sub.c: 113: LATB6 = (val & 0x02) >> 1;
  2392  0350  0875               	movf	lcdSend@val,w
  2393  0351  00F4               	movwf	??_lcdSend
  2394  0352  3001               	movlw	1
  2395  0353                     u1575:	
  2396  0353  36F4               	lsrf	??_lcdSend,f
  2397  0354  0B89               	decfsz	9,f
  2398  0355  2B53               	goto	u1575
  2399  0356  1C74               	btfss	??_lcdSend,0
  2400  0357  2B5B               	goto	u1580
  2401  0358  0022               	movlb	2	; select bank2
  2402  0359  170D               	bsf	13,6	;volatile
  2403  035A  2B5D               	goto	l1381
  2404  035B                     u1580:	
  2405  035B  0022               	movlb	2	; select bank2
  2406  035C  130D               	bcf	13,6	;volatile
  2407  035D                     l1381:	
  2408                           
  2409                           ;LCD_Display_Sub.c: 114: LATB5 = (val & 0x04) >> 2;
  2410  035D  0875               	movf	lcdSend@val,w
  2411  035E  00F4               	movwf	??_lcdSend
  2412  035F  3002               	movlw	2
  2413  0360                     u1605:	
  2414  0360  36F4               	lsrf	??_lcdSend,f
  2415  0361  0B89               	decfsz	9,f
  2416  0362  2B60               	goto	u1605
  2417  0363  1C74               	btfss	??_lcdSend,0
  2418  0364  2B68               	goto	u1610
  2419  0365  0022               	movlb	2	; select bank2
  2420  0366  168D               	bsf	13,5	;volatile
  2421  0367  2B6A               	goto	l1383
  2422  0368                     u1610:	
  2423  0368  0022               	movlb	2	; select bank2
  2424  0369  128D               	bcf	13,5	;volatile
  2425  036A                     l1383:	
  2426                           
  2427                           ;LCD_Display_Sub.c: 115: LATB4 = (val & 0x08) >> 3;
  2428  036A  0875               	movf	lcdSend@val,w
  2429  036B  00F4               	movwf	??_lcdSend
  2430  036C  3003               	movlw	3
  2431  036D                     u1635:	
  2432  036D  36F4               	lsrf	??_lcdSend,f
  2433  036E  0B89               	decfsz	9,f
  2434  036F  2B6D               	goto	u1635
  2435  0370  1C74               	btfss	??_lcdSend,0
  2436  0371  2B75               	goto	u1640
  2437  0372  0022               	movlb	2	; select bank2
  2438  0373  160D               	bsf	13,4	;volatile
  2439  0374  2B77               	goto	l1385
  2440  0375                     u1640:	
  2441  0375  0022               	movlb	2	; select bank2
  2442  0376  120D               	bcf	13,4	;volatile
  2443  0377                     l1385:	
  2444                           
  2445                           ;LCD_Display_Sub.c: 116: LATB3 = (val & 0x10) >> 4;
  2446  0377  0875               	movf	lcdSend@val,w
  2447  0378  00F4               	movwf	??_lcdSend
  2448  0379  3004               	movlw	4
  2449  037A                     u1665:	
  2450  037A  36F4               	lsrf	??_lcdSend,f
  2451  037B  0B89               	decfsz	9,f
  2452  037C  2B7A               	goto	u1665
  2453  037D  1C74               	btfss	??_lcdSend,0
  2454  037E  2B82               	goto	u1670
  2455  037F  0022               	movlb	2	; select bank2
  2456  0380  158D               	bsf	13,3	;volatile
  2457  0381  2B84               	goto	l1387
  2458  0382                     u1670:	
  2459  0382  0022               	movlb	2	; select bank2
  2460  0383  118D               	bcf	13,3	;volatile
  2461  0384                     l1387:	
  2462                           
  2463                           ;LCD_Display_Sub.c: 117: LATB2 = (val & 0x20) >> 5;
  2464  0384  0875               	movf	lcdSend@val,w
  2465  0385  00F4               	movwf	??_lcdSend
  2466  0386  3005               	movlw	5
  2467  0387                     u1695:	
  2468  0387  36F4               	lsrf	??_lcdSend,f
  2469  0388  0B89               	decfsz	9,f
  2470  0389  2B87               	goto	u1695
  2471  038A  1C74               	btfss	??_lcdSend,0
  2472  038B  2B8F               	goto	u1700
  2473  038C  0022               	movlb	2	; select bank2
  2474  038D  150D               	bsf	13,2	;volatile
  2475  038E  2B91               	goto	l1389
  2476  038F                     u1700:	
  2477  038F  0022               	movlb	2	; select bank2
  2478  0390  110D               	bcf	13,2	;volatile
  2479  0391                     l1389:	
  2480                           
  2481                           ;LCD_Display_Sub.c: 118: LATB1 = (val & 0x40) >> 6;
  2482  0391  0875               	movf	lcdSend@val,w
  2483  0392  00F4               	movwf	??_lcdSend
  2484  0393  3006               	movlw	6
  2485  0394                     u1725:	
  2486  0394  36F4               	lsrf	??_lcdSend,f
  2487  0395  0B89               	decfsz	9,f
  2488  0396  2B94               	goto	u1725
  2489  0397  1C74               	btfss	??_lcdSend,0
  2490  0398  2B9C               	goto	u1730
  2491  0399  0022               	movlb	2	; select bank2
  2492  039A  148D               	bsf	13,1	;volatile
  2493  039B  2B9E               	goto	l1391
  2494  039C                     u1730:	
  2495  039C  0022               	movlb	2	; select bank2
  2496  039D  108D               	bcf	13,1	;volatile
  2497  039E                     l1391:	
  2498                           
  2499                           ;LCD_Display_Sub.c: 119: LATB0 = (val & 0x80) >> 7;
  2500  039E  0875               	movf	lcdSend@val,w
  2501  039F  00F4               	movwf	??_lcdSend
  2502  03A0  3007               	movlw	7
  2503  03A1                     u1755:	
  2504  03A1  36F4               	lsrf	??_lcdSend,f
  2505  03A2  0B89               	decfsz	9,f
  2506  03A3  2BA1               	goto	u1755
  2507  03A4  1C74               	btfss	??_lcdSend,0
  2508  03A5  2BA9               	goto	u1760
  2509  03A6  0022               	movlb	2	; select bank2
  2510  03A7  140D               	bsf	13,0	;volatile
  2511  03A8  2BAB               	goto	l1393
  2512  03A9                     u1760:	
  2513  03A9  0022               	movlb	2	; select bank2
  2514  03AA  100D               	bcf	13,0	;volatile
  2515  03AB                     l1393:	
  2516                           
  2517                           ;LCD_Display_Sub.c: 121: lcdPulseEnable();
  2518  03AB  3184  2447         	fcall	_lcdPulseEnable
  2519  03AD  0008               	return
  2520  03AE                     __end_of_lcdSend:	
  2521                           
  2522                           	psect	text11
  2523  0447                     __ptext11:	
  2524 ;; *************** function _lcdPulseEnable *****************
  2525 ;; Defined at:
  2526 ;;		line 124 in file "LCD_Display_Sub.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;		None
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;		None
  2531 ;; Return value:  Size  Location     Type
  2532 ;;                  1    wreg      void 
  2533 ;; Registers used:
  2534 ;;		wreg
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2544 ;;Total ram usage:        0 bytes
  2545 ;; Hardware stack levels used:    1
  2546 ;; Hardware stack levels required when called:    1
  2547 ;; This function calls:
  2548 ;;		Nothing
  2549 ;; This function is called by:
  2550 ;;		_lcdSend
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           
  2555                           ;psect for function _lcdPulseEnable
  2556  0447                     _lcdPulseEnable:	
  2557                           
  2558                           ;LCD_Display_Sub.c: 125: LATA2 = 0;
  2559                           
  2560                           ;incstack = 0
  2561                           ; Regs used in _lcdPulseEnable: [wreg]
  2562  0447  0022               	movlb	2	; select bank2
  2563  0448  110C               	bcf	12,2	;volatile
  2564                           
  2565                           ;LCD_Display_Sub.c: 126: _delay((unsigned long)((1)*(8000000/4000000.0)));
  2566  0449  3200               	nop2	;2 cycle nop
  2567                           
  2568                           ;LCD_Display_Sub.c: 127: LATA2 = 1;
  2569  044A  0022               	movlb	2	; select bank2
  2570  044B  150C               	bsf	12,2	;volatile
  2571                           
  2572                           ;LCD_Display_Sub.c: 128: _delay((unsigned long)((1)*(8000000/4000000.0)));
  2573  044C  3200               	nop2	;2 cycle nop
  2574                           
  2575                           ;LCD_Display_Sub.c: 129: LATA2 = 0;
  2576  044D  0022               	movlb	2	; select bank2
  2577  044E  110C               	bcf	12,2	;volatile
  2578                           
  2579                           ;LCD_Display_Sub.c: 130: _delay((unsigned long)((100)*(8000000/4000000.0)));
  2580  044F  3042               	movlw	66
  2581  0450                     u1997:	
  2582  0450  0B89               	decfsz	9,f
  2583  0451  2C50               	goto	u1997
  2584  0452  3200               	nop2
  2585  0453  0008               	return
  2586  0454                     __end_of_lcdPulseEnable:	
  2587                           
  2588                           	psect	text12
  2589  0454                     __ptext12:	
  2590 ;; *************** function _initializePort *****************
  2591 ;; Defined at:
  2592 ;;		line 177 in file "LCD_Display_Program.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;		None
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;		None
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  1    wreg      void 
  2599 ;; Registers used:
  2600 ;;		wreg, status,2
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2610 ;;Total ram usage:        0 bytes
  2611 ;; Hardware stack levels used:    1
  2612 ;; Hardware stack levels required when called:    1
  2613 ;; This function calls:
  2614 ;;		Nothing
  2615 ;; This function is called by:
  2616 ;;		_main
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           
  2621                           ;psect for function _initializePort
  2622  0454                     _initializePort:	
  2623                           
  2624                           ;LCD_Display_Program.c: 179: PORTA = 0x00;
  2625                           
  2626                           ;incstack = 0
  2627                           ; Regs used in _initializePort: [wreg+status,2]
  2628  0454  0020               	movlb	0	; select bank0
  2629  0455  018C               	clrf	12	;volatile
  2630                           
  2631                           ;LCD_Display_Program.c: 180: PORTB = 0x00;
  2632  0456  018D               	clrf	13	;volatile
  2633                           
  2634                           ;LCD_Display_Program.c: 181: PORTC = 0x00;
  2635  0457  018E               	clrf	14	;volatile
  2636                           
  2637                           ;LCD_Display_Program.c: 185: ANSELA = 0x00;
  2638  0458  0023               	movlb	3	; select bank3
  2639  0459  018C               	clrf	12	;volatile
  2640                           
  2641                           ;LCD_Display_Program.c: 186: ANSELB = 0x00;
  2642  045A  018D               	clrf	13	;volatile
  2643                           
  2644                           ;LCD_Display_Program.c: 192: TRISA = 0x00;
  2645  045B  0021               	movlb	1	; select bank1
  2646  045C  018C               	clrf	12	;volatile
  2647                           
  2648                           ;LCD_Display_Program.c: 193: TRISB = 0x00;
  2649  045D  018D               	clrf	13	;volatile
  2650                           
  2651                           ;LCD_Display_Program.c: 194: TRISC = 0x80;
  2652  045E  3080               	movlw	128
  2653  045F  008E               	movwf	14	;volatile
  2654  0460  0008               	return
  2655  0461                     __end_of_initializePort:	
  2656                           
  2657                           	psect	intentry
  2658  0004                     __pintentry:	
  2659 ;; *************** function _ISR *****************
  2660 ;; Defined at:
  2661 ;;		line 50 in file "LCD_Display_Program.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;		None
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;		None
  2666 ;; Return value:  Size  Location     Type
  2667 ;;                  1    wreg      void 
  2668 ;; Registers used:
  2669 ;;		wreg, status,2
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2677 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2678 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2679 ;;Total ram usage:        3 bytes
  2680 ;; Hardware stack levels used:    1
  2681 ;; This function calls:
  2682 ;;		Nothing
  2683 ;; This function is called by:
  2684 ;;		Interrupt level 1
  2685 ;; This function uses a non-reentrant model
  2686 ;;
  2687                           
  2688  0004                     _ISR:	
  2689                           
  2690                           ;incstack = 0
  2691  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2692                           
  2693                           ; Regs used in _ISR: [wreg+status,2]
  2694  0005  3180               	pagesel	$
  2695  0006  0020               	movlb	0	; select bank0
  2696  0007  087F               	movf	127,w
  2697  0008  00F2               	movwf	??_ISR+2
  2698                           
  2699                           ;LCD_Display_Program.c: 52: if(RCIF==1){
  2700  0009  1E91               	btfss	17,5	;volatile
  2701  000A  281D               	goto	i1l88
  2702                           
  2703                           ;LCD_Display_Program.c: 54: if(OERR==1){
  2704  000B  0023               	movlb	3	; select bank3
  2705  000C  1C9D               	btfss	29,1	;volatile
  2706  000D  2812               	goto	i1l1287
  2707                           
  2708                           ;LCD_Display_Program.c: 55: RCSTA=0;
  2709  000E  019D               	clrf	29	;volatile
  2710                           
  2711                           ;LCD_Display_Program.c: 56: RCSTA=0x90;
  2712  000F  3090               	movlw	144
  2713  0010  009D               	movwf	29	;volatile
  2714                           
  2715                           ;LCD_Display_Program.c: 57: }
  2716  0011  281D               	goto	i1l88
  2717  0012                     i1l1287:	
  2718                           
  2719                           ;LCD_Display_Program.c: 58: else{
  2720                           ;LCD_Display_Program.c: 59: rx_data=RCREG;
  2721  0012  0819               	movf	25,w	;volatile
  2722  0013  00F0               	movwf	??_ISR
  2723  0014  01F1               	clrf	??_ISR+1
  2724  0015  0870               	movf	??_ISR,w
  2725  0016  0020               	movlb	0	; select bank0
  2726  0017  00C4               	movwf	_rx_data
  2727  0018  0871               	movf	??_ISR+1,w
  2728  0019  00C5               	movwf	_rx_data+1
  2729                           
  2730                           ;LCD_Display_Program.c: 60: rx_flag=1;
  2731  001A  01CC               	clrf	_rx_flag
  2732  001B  0ACC               	incf	_rx_flag,f
  2733                           
  2734                           ;LCD_Display_Program.c: 61: RCIF=0;
  2735  001C  1291               	bcf	17,5	;volatile
  2736  001D                     i1l88:	
  2737  001D  0872               	movf	??_ISR+2,w
  2738  001E  0020               	movlb	0	; select bank0
  2739  001F  00FF               	movwf	127
  2740  0020  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2741  0021  0009               	retfie
  2742  0022                     __end_of_ISR:	
  2743  007E                     btemp	set	126	;btemp
  2744  007E                     int$flags	set	126
  2745  007E                     wtemp0	set	126


Data Sizes:
    Strings     27
    Constant    0
    Data        21
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     15      45
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_31(CODE[2]), STR_30(CODE[2]), STR_29(CODE[2]), STR_28(CODE[2]), 
		 -> STR_27(CODE[2]), STR_26(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), 
		 -> STR_23(CODE[2]), STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), 
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), STR_2(CODE[2]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 5
		 -> moji3(BANK0[5]), moji2(BANK0[5]), moji1(BANK0[5]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 5
		 -> moji3(BANK0[5]), moji2(BANK0[5]), moji1(BANK0[5]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_32(CODE[2]), moji3(BANK0[5]), moji2(BANK0[5]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 5
		 -> moji1(BANK0[5]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 5
		 -> moji1(BANK0[5]), 

    lcdPrint@str	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), moji1(BANK0[5]), 

    lcdSetCursor@lcd	PTR struct _Lcd size(1) Largest target is 10
		 -> main@lcd(BANK0[10]), 

    lcdBegin@lcd	PTR struct _Lcd size(1) Largest target is 10
		 -> main@lcd(BANK0[10]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 5
		 -> moji1(BANK0[5]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 5
		 -> moji3(BANK0[5]), moji2(BANK0[5]), moji1(BANK0[5]), 


Critical Paths under _main in COMMON

    _main->_lcdBegin
    _main->_lcdPrint
    _main->_lcdSetCursor
    _read->_strcat
    _read->_strcpy
    _lcdSetCursor->_lcdCommand
    _lcdPrint->_lcdWrite
    _lcdWrite->_lcdSend
    _lcdClear->_lcdCommand
    _lcdBegin->_lcdCommand
    _lcdCommand->_lcdSend

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcdBegin

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    7297
                                              3 BANK0     12    12      0
                     _initializePort
                           _lcdBegin
                           _lcdClear
                           _lcdPrint
                       _lcdSetCursor
                               _read
 ---------------------------------------------------------------------------------
 (1) _read                                                 0     0      0    3638
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               5     3      2    3225
                                              3 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _strcat                                               5     3      2     413
                                              3 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _lcdSetCursor                                         4     2      2     983
                                              7 COMMON     2     0      2
                                              0 BANK0      2     2      0
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (1) _lcdPrint                                             3     1      2     635
                                              7 COMMON     2     0      2
                                              0 BANK0      1     1      0
                           _lcdWrite
 ---------------------------------------------------------------------------------
 (2) _lcdWrite                                             1     1      0     440
                                              6 COMMON     1     1      0
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _lcdClear                                             1     1      0     440
                                              7 COMMON     1     1      0
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (1) _lcdBegin                                             5     2      3    1409
                                              7 COMMON     2     2      0
                                              0 BANK0      3     0      3
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0     440
                                              6 COMMON     1     1      0
                            _lcdSend
 ---------------------------------------------------------------------------------
 (3) _lcdSend                                              3     2      1     409
                                              3 COMMON     3     2      1
                     _lcdPulseEnable
 ---------------------------------------------------------------------------------
 (4) _lcdPulseEnable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initializePort                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initializePort
   _lcdBegin
     _lcdCommand
       _lcdSend
         _lcdPulseEnable
   _lcdClear
     _lcdCommand
       _lcdSend
         _lcdPulseEnable
   _lcdPrint
     _lcdWrite
       _lcdSend
         _lcdPulseEnable
   _lcdSetCursor
     _lcdCommand
       _lcdSend
         _lcdPulseEnable
   _read
     _strcat
     _strcpy

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      F      2D       5       56.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      38      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      38      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Fri Jun 23 12:12:16 2017

                      _a 0024                        _b 0022                        _c 0020  
                      _i 004A              lcdWrite@val 0076              __CFG_CP$OFF 0000  
                    l100 030D                      l140 01E5                      _GIE 005F  
           __CFG_CPD$OFF 0000                      _ISR 0004             __CFG_BORV$HI 0000  
                    wreg 0009             __CFG_LVP$OFF 0000                     ?_ISR 0070  
                   l1201 0115                     l1221 015B                     l1213 013F  
                   l1205 0123                     l1071 03C6                     l1065 03B3  
                   l1241 019F                     l1233 0183                     l1225 0168  
                   l1217 014D                     l1209 0131                     l1161 0090  
                   l1153 0076                     l1145 005D                     l1067 03BE  
                   l1059 03FC                     l1413 0226                     l1405 020E  
                   l1253 01C9                     l1245 01AD                     l1237 0191  
                   l1229 0175                     l1181 00D1                     l1173 00B7  
                   l1165 009D                     l1157 0083                     l1149 0069  
                   l1503 02DF                     l1257 01D7                     l1249 01BB  
                   l1193 00F9                     l1185 00DE                     l1177 00C4  
                   l1169 00AA                     l1521 0304                     l1513 02F1  
                   l1381 035D                     l1197 0107                     l1189 00EB  
                   l1517 02FA                     l1525 031C                     l1391 039E  
                   l1383 036A                     l1463 03DD                     l1393 03AB  
                   l1385 0377                     l1387 0384                     l1379 0350  
                   l1475 0426                     l1467 03EA                     l1389 0391  
                   l1497 02D1                     STR_1 0474                     STR_2 047B  
                   STR_3 047D                     STR_4 047F                     STR_5 0481  
                   STR_6 0483                     STR_7 0485                     STR_8 0487  
                   STR_9 0489                     _BRGH 0CF2                     u1610 0368  
                   u1530 0346                     u1700 038F                     u1605 0360  
                   u1550 034E                     u1640 0375                     u1544 0348  
                   u1730 039C                     u1635 036D                     u1580 035B  
                   u1725 0394                     u1670 0382                     u1575 0353  
                   u1760 03A9                     u1665 037A                     u1905 031A  
                   u1755 03A1                     u1835 02DD                     u1695 0387  
                   u1947 0441                     _PEIE 005E                     u1957 0247  
                   u1967 025A                     u1977 0268                     u1987 0291  
                   _RCIE 048D                     _RCIF 008D                     u1997 0450  
                   i1l88 001D                     _OERR 0CE9                     _SYNC 0CF4  
       ??_initializePort 0073             __CFG_WRT$OFF 0000                     _main 02AF  
                   _read 003E                     _num1 0079                     _num2 0048  
                   _num3 0046                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     btemp 007E            __CFG_BOREN$ON 0000  
                   start 0022            __CFG_IESO$OFF 0000         ??_lcdPulseEnable 0073  
                  ??_ISR 0070                    ?_main 0070                    ?_read 0070  
                  STR_10 048B                    STR_11 048D                    STR_12 047B  
                  STR_20 048B                    STR_13 047D                    STR_21 048D  
                  STR_22 047B                    STR_14 047F                    STR_30 048B  
                  STR_23 047D                    STR_15 0481                    STR_31 048D  
                  STR_24 047F                    STR_16 0483                    STR_32 0479  
                  _BRG16 0CFB                    STR_25 0481                    STR_17 0485  
          __CFG_WDTE$OFF 0000                    STR_26 0483                    STR_18 0487  
                  STR_27 0485                    STR_19 0489                    STR_28 0487  
                  STR_29 0489                    _LATA0 0860                    _LATA1 0861  
                  _LATA2 0862                    _LATB0 0868                    _LATB1 0869  
                  _LATB2 086A                    _LATB3 086B                    _LATB4 086C  
                  _LATB5 086D                    _LATB6 086E                    _LATB7 086F  
                  _RCREG 0199                    _RCSTA 019D                    _SPBRG 019B  
                  _PORTA 000C                    _PORTB 000D                    _PORTC 000E  
                  _TRISA 008C                    _TRISB 008D                    _TRISC 008E  
          __CFG_PWRTE$ON 0000          __end_of_lcdSend 03AE           __CFG_FCMEN$OFF 0000  
                  _moji1 0030                    _moji2 002B                    _moji3 0026  
                  status 0003                    wtemp0 007E           __CFG_MCLRE$OFF 0000  
        __initialization 0024             __end_of_main 033E             __end_of_read 01FD  
                 ??_main 0038                   ??_read 0078           __CFG_PLLEN$OFF 0000  
   __end_of_lcdSetCursor 03F7                   _ANSELA 018C                   _ANSELB 018D  
                 i1l1287 0012                   _OSCCON 0099         __end_of_lcdBegin 02AF  
       __end_of_lcdClear 0447         __end_of_lcdPrint 043A         __end_of_lcdWrite 0468  
         __CFG_STVREN$ON 0000                ??_lcdSend 0074                   _strcat 03AE  
                 _strcpy 03F7  __end_of__initialization 003A           __pcstackCOMMON 0070  
           __pidataBANK0 0411               __pbssBANK0 0044          __CFG_VCAPEN$OFF 0000  
             __pmaintext 02AF               _lcdCommand 046E               __pintentry 0004  
  __size_of_lcdSetCursor 0024                  ?_strcat 0073                  ?_strcpy 0073  
              ?_lcdBegin 0035                ?_lcdClear 0070                ?_lcdPrint 0077  
              ?_lcdWrite 0070         lcdBegin@charsize 0037             _lcdSetCursor 03D3  
        lcdSetCursor@col 0077          lcdSetCursor@lcd 0036                  _lcdSend 033E  
                __ptext1 003E                  __ptext2 03F7                  __ptext3 03AE  
                __ptext4 03D3                  __ptext5 0426                  __ptext6 0461  
                __ptext7 043A                  __ptext8 01FD                  __ptext9 046E  
        __size_of_strcat 0025          __size_of_strcpy 001A             __size_of_ISR 001E  
             ??_lcdBegin 0077               ??_lcdClear 0077                  _rx_data 0044  
                _rx_flag 004C               ??_lcdPrint 0035               ??_lcdWrite 0076  
                main@lcd 003A     end_of_initialization 003A                  init_ram 0468  
                initloop 0469              ?_lcdCommand 0070  __size_of_initializePort 000D  
             lcdSend@val 0075  __size_of_lcdPulseEnable 000D         __CFG_FOSC$INTOSC 0000  
          lcdBegin@lines 0036           __end_of_strcat 03D3           __end_of_strcpy 0411  
    start_initialization 0024              __end_of_ISR 0022      __size_of_lcdCommand 0006  
            __pdataBANK0 0020                 ??_strcat 0075                 ??_strcpy 0075  
            __pbssCOMMON 0079                ___latbits 0003            __pcstackBANK0 0035  
      __size_of_lcdBegin 00B2        __size_of_lcdClear 000D        __size_of_lcdPrint 0014  
      __size_of_lcdWrite 0007           _initializePort 0454                 ?_lcdSend 0073  
         _lcdPulseEnable 0447            lcdCommand@com 0076   __end_of_initializePort 0461  
           ??_lcdCommand 0076   __end_of_lcdPulseEnable 0454             lcdBegin@cols 0035  
     __end_of_lcdCommand 0474         lcdSetCursor@line 0078          ?_initializePort 0070  
        ?_lcdPulseEnable 0070         __size_of_lcdSend 0070               strcat@from 0073  
               _lcdBegin 01FD                 _lcdClear 043A                 __ptext10 033E  
               __ptext11 0447                 __ptext12 0454                 _lcdPrint 0426  
               _lcdWrite 0461               strcpy@from 0073            __size_of_main 008F  
          __size_of_read 01BF                 int$flags 007E              lcdBegin@lcd 0078  
         __pstringtext10 0489           __pstringtext11 048B           __pstringtext12 048D  
         __pstringtext13 0000                 intlevel1 0000        __CFG_CLKOUTEN$OFF 0000  
          ?_lcdSetCursor 0077            __pstringtext1 0474            __pstringtext2 0479  
          __pstringtext3 047B            __pstringtext4 047D            __pstringtext5 047F  
          __pstringtext6 0481            __pstringtext7 0483            __pstringtext8 0485  
          __pstringtext9 0487                 strcat@cp 0076                 strcat@to 0077  
            lcdSend@mode 0073                 strcpy@cp 0076                 strcpy@to 0077  
            lcdPrint@str 0077           ??_lcdSetCursor 0035  
